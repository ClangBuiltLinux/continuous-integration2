#!/usr/bin/env python3
import argparse
import yaml
import sys


def parse_args(trees):
    parser = argparse.ArgumentParser(description="Generate TuxSuite YML.")
    parser.add_argument("tree", help="The git repo and ref to filter in.",
            choices=[tree["name"] for tree in trees])
    return parser.parse_args()


def get_config():
    # Trusted input.
    # https://github.com/yaml/pyyaml/wiki/PyYAML-yaml.load(input)-Deprecation
    return yaml.load(sys.stdin, Loader=yaml.FullLoader)


def get_repo_ref(config, tree_name):
    for tree in config["trees"]:
        if tree["name"] == tree_name:
            return tree["git_repo"], tree["git_ref"]


def emit_tuxsuite_yml(config, tree):
    print("# DO NOT MODIFY MANUALLY!")
    print("# This file has been autogenerated by invoking:")
    print("# $ ./generate_tuxsuite.py < generator.yml {} > tuxsuite/{}.tux.yml".format(tree, tree))
    print("# Invoke tuxsuite via:")
    print("# $ tuxsuite build-set --set-name cbl --json-out builds.json --tux-config {}.tux.yml".format(tree))
    print("""\
sets:
  - name: cbl
    builds:\
""")
    repo, ref = get_repo_ref(config, tree)
    max_version = max(config["llvm_versions"])
    for build in config["builds"]:
        if build["git_repo"] == repo and build["git_ref"] == ref:
            arch = build["ARCH"] if "ARCH" in build else "x86_64"
            toolchain = "clang-"
            toolchain += "nightly" if build["llvm_version"] == max_version else str(build["llvm_version"])
            kconfig = build["config"]
            make_variables = ", make_variables: " + str(build["make_variables"]) if "make_variables" in build else ""
            print("      - {{git_repo: \"{0}\", git_ref: \"{1}\", target_arch: {2}, toolchain: {3}, kconfig: {4}{5}}}".format(\
                    build["git_repo"], build["git_ref"], arch, toolchain, kconfig, make_variables))

if __name__ == "__main__":
    # The list of valid trees come from the input, so we parse the input, then
    # check command line flags.
    config = get_config()
    args = parse_args(config["trees"])
    emit_tuxsuite_yml(config, args.tree)
