# DO NOT MODIFY MANUALLY!
# This file has been autogenerated by invoking:
# $ ./generate_workflow.py < generator.yml next > .github/workflows/next.yml
name: next
'on':
  push:
    branches:
    - main
    - presubmit/*
    paths:
    - check_logs.py
    - utils.py
    - tuxsuite/next.tux.yml
    - .github/workflows/next.yml
  schedule:
  - cron: 0 8 * * 1,2,3,4,5
  workflow_dispatch: null
jobs:
  kick_tuxsuite_defconfigs:
    name: TuxSuite (defconfigs)
    runs-on: ubuntu-20.04
    container: tuxsuite/tuxsuite
    env:
      TUXSUITE_TOKEN: ${{ secrets.TUXSUITE_TOKEN }}
    steps:
    - uses: actions/checkout@v2
    - name: tuxsuite
      run: tuxsuite build-set --set-name defconfigs --json-out builds.json --tux-config tuxsuite/next.tux.yml || true
    - name: save output
      uses: actions/upload-artifact@v2
      with:
        path: builds.json
        name: output_artifact_defconfigs
  _1158c1dfe5f9fcc225240c547be18fda:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=arm LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 multi_v5_defconfig
    env:
      ARCH: arm
      LLVM_VERSION: 13
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: multi_v5_defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _3dcc2dad9e1ef4e6a3f358ffef73f7fe:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=arm LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 aspeed_g5_defconfig
    env:
      ARCH: arm
      LLVM_VERSION: 13
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: aspeed_g5_defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _9532604fe2c353a710edd757453b4457:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=arm LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 multi_v7_defconfig
    env:
      ARCH: arm
      LLVM_VERSION: 13
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: multi_v7_defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _f312f8cee59fa1e3e85e4b3262690a47:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=arm LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 multi_v7_defconfig+CONFIG_THUMB2_KERNEL=y
    env:
      ARCH: arm
      LLVM_VERSION: 13
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: multi_v7_defconfig+CONFIG_THUMB2_KERNEL=y
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _210faf86b075b31ec48b4fa5276daa01:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=arm64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 defconfig
    env:
      ARCH: arm64
      LLVM_VERSION: 13
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _63a33d081dc4000b2eaf65e367d99441:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=arm64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 defconfig+CONFIG_CPU_BIG_ENDIAN=y
    env:
      ARCH: arm64
      LLVM_VERSION: 13
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig+CONFIG_CPU_BIG_ENDIAN=y
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _db43a82d57f22c3d14f773847535c8d4:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=arm64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 defconfig+CONFIG_LTO_CLANG_FULL=y
    env:
      ARCH: arm64
      LLVM_VERSION: 13
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig+CONFIG_LTO_CLANG_FULL=y
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _8fbad23db8694016590b623a4a748b10:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=arm64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 defconfig+CONFIG_LTO_CLANG_THIN=y
    env:
      ARCH: arm64
      LLVM_VERSION: 13
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig+CONFIG_LTO_CLANG_THIN=y
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _0727f525f2017b393835d55bbffbb6ab:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=arm64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 defconfig+CONFIG_LTO_CLANG_THIN=y+CONFIG_CFI_CLANG=y
    env:
      ARCH: arm64
      LLVM_VERSION: 13
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig+CONFIG_LTO_CLANG_THIN=y+CONFIG_CFI_CLANG=y
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _e23f00f1b9cec9a3a69e648c386400ad:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=hexagon BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 defconfig
    env:
      ARCH: hexagon
      LLVM_VERSION: 13
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _7dde147b804e95998e110f5dfe487e8f:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=i386 LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 defconfig
    env:
      ARCH: i386
      LLVM_VERSION: 13
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _dd0abd18f6fb089956a0981751bc6b0c:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=mips LLVM=1 LLVM_VERSION=13 malta_defconfig+CONFIG_BLK_DEV_INITRD=y+CONFIG_CPU_BIG_ENDIAN=y
    env:
      ARCH: mips
      LLVM_VERSION: 13
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: malta_defconfig+CONFIG_BLK_DEV_INITRD=y+CONFIG_CPU_BIG_ENDIAN=y
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _4cbced3108106eb3201bf12eab9e65eb:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=mips LLVM=1 LLVM_VERSION=13 malta_defconfig+CONFIG_BLK_DEV_INITRD=y
    env:
      ARCH: mips
      LLVM_VERSION: 13
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: malta_defconfig+CONFIG_BLK_DEV_INITRD=y
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _7ad08b1bcc47573b8a65a6f0b4e0ad5a:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=powerpc BOOT=0 LLVM=1 LLVM_VERSION=13 ppc44x_defconfig
    env:
      ARCH: powerpc
      LLVM_VERSION: 13
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: ppc44x_defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _069dcf551c46228c7070e4764927aa88:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=powerpc LLVM=1 LLVM_VERSION=13 powernv_defconfig
    env:
      ARCH: powerpc
      LLVM_VERSION: 13
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: powernv_defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _ea24606870e91e9589c8b50eea55772a:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=riscv LLVM=1 LD=riscv64-linux-gnu-ld LLVM_IAS=1 LLVM_VERSION=13 defconfig+CONFIG_EFI=n
    env:
      ARCH: riscv
      LLVM_VERSION: 13
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig+CONFIG_EFI=n
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _fee5569ddd8b71b19e7fb517769de851:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=s390 CC=clang LLVM_VERSION=13 defconfig
    env:
      ARCH: s390
      LLVM_VERSION: 13
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _5725232ce5f790d6db053c3d226eead6:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=x86_64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 defconfig
    env:
      ARCH: x86_64
      LLVM_VERSION: 13
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _0c554830a7608800ee581090e7c68ae2:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=x86_64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 defconfig+CONFIG_LTO_CLANG_FULL=y
    env:
      ARCH: x86_64
      LLVM_VERSION: 13
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig+CONFIG_LTO_CLANG_FULL=y
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _40472006bdaaeeebdb5591dd0d8287f8:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=x86_64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 defconfig+CONFIG_LTO_CLANG_THIN=y
    env:
      ARCH: x86_64
      LLVM_VERSION: 13
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig+CONFIG_LTO_CLANG_THIN=y
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _044b68165327772b2a5ec251950105f5:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=x86_64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 defconfig+CONFIG_GCOV_KERNEL=y+CONFIG_GCOV_PROFILE_ALL=y
    env:
      ARCH: x86_64
      LLVM_VERSION: 13
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig+CONFIG_GCOV_KERNEL=y+CONFIG_GCOV_PROFILE_ALL=y
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _a11abf02e18322177d92417220207cb8:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=arm LLVM=1 LLVM_VERSION=12 multi_v5_defconfig
    env:
      ARCH: arm
      LLVM_VERSION: 12
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: multi_v5_defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _6f7c758da41b41b25476334cfd2afd0e:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=arm LLVM=1 LLVM_VERSION=12 aspeed_g5_defconfig
    env:
      ARCH: arm
      LLVM_VERSION: 12
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: aspeed_g5_defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _60ecbb939df9a7399fa560fa887f0132:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=arm LLVM=1 LLVM_VERSION=12 multi_v7_defconfig
    env:
      ARCH: arm
      LLVM_VERSION: 12
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: multi_v7_defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _267d8195f8748ce0c5d40740008e5dde:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=arm LLVM=1 LLVM_VERSION=12 multi_v7_defconfig+CONFIG_THUMB2_KERNEL=y
    env:
      ARCH: arm
      LLVM_VERSION: 12
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: multi_v7_defconfig+CONFIG_THUMB2_KERNEL=y
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _4e7d23e292f62a4082a1d093ce1ae4f3:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=arm64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=12 defconfig
    env:
      ARCH: arm64
      LLVM_VERSION: 12
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _692c30a6d87ab670b58ed3f16621db54:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=arm64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=12 defconfig+CONFIG_LTO_CLANG_FULL=y
    env:
      ARCH: arm64
      LLVM_VERSION: 12
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig+CONFIG_LTO_CLANG_FULL=y
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _898799d6a651bf4dfbea81a2459ce7ed:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=arm64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=12 defconfig+CONFIG_LTO_CLANG_THIN=y
    env:
      ARCH: arm64
      LLVM_VERSION: 12
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig+CONFIG_LTO_CLANG_THIN=y
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _8c5abf2855f7fef8f5d67ba30dcc77b2:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=arm64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=12 defconfig+CONFIG_LTO_CLANG_THIN=y+CONFIG_CFI_CLANG=y
    env:
      ARCH: arm64
      LLVM_VERSION: 12
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig+CONFIG_LTO_CLANG_THIN=y+CONFIG_CFI_CLANG=y
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _e7c5cf48eb39a0ec57c7b51ec921b5e1:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=hexagon BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=12 defconfig
    env:
      ARCH: hexagon
      LLVM_VERSION: 12
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _300d5ea669ce6bad5b1433d2643b416d:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=i386 LLVM=1 LLVM_IAS=1 LLVM_VERSION=12 defconfig
    env:
      ARCH: i386
      LLVM_VERSION: 12
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _2e8125b1f3df9bc77d92a930d41f4782:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=mips LLVM=1 LD=mips-linux-gnu-ld LLVM_VERSION=12 malta_defconfig+CONFIG_BLK_DEV_INITRD=y+CONFIG_CPU_BIG_ENDIAN=y
    env:
      ARCH: mips
      LLVM_VERSION: 12
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: malta_defconfig+CONFIG_BLK_DEV_INITRD=y+CONFIG_CPU_BIG_ENDIAN=y
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _106d267c84f6ece7cf9710a2cb351c6d:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=mips LLVM=1 LLVM_VERSION=12 malta_defconfig+CONFIG_BLK_DEV_INITRD=y
    env:
      ARCH: mips
      LLVM_VERSION: 12
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: malta_defconfig+CONFIG_BLK_DEV_INITRD=y
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _535ebd7ca1798dda46eccb404aea7620:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=powerpc BOOT=0 LLVM=1 LLVM_VERSION=12 ppc44x_defconfig
    env:
      ARCH: powerpc
      LLVM_VERSION: 12
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: ppc44x_defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _4929805e7a2ad956b20f06354ba6557f:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=powerpc LLVM=1 LLVM_VERSION=12 powernv_defconfig
    env:
      ARCH: powerpc
      LLVM_VERSION: 12
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: powernv_defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _49b8454e1fcf8ba7fc36c5f5e6cc5299:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=riscv LLVM=1 LD=riscv64-linux-gnu-ld LLVM_IAS=1 LLVM_VERSION=12 defconfig+CONFIG_EFI=n
    env:
      ARCH: riscv
      LLVM_VERSION: 12
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig+CONFIG_EFI=n
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _efcb2e4e81eb80fd4fdf114ea0296d0c:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=s390 CC=clang LLVM_VERSION=12 defconfig
    env:
      ARCH: s390
      LLVM_VERSION: 12
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _d49633cca166398690b1f3ecad135a14:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=x86_64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=12 defconfig
    env:
      ARCH: x86_64
      LLVM_VERSION: 12
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _1fdd7b9c9390f3aadf41e6a594f3b6a6:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=x86_64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=12 defconfig+CONFIG_LTO_CLANG_FULL=y
    env:
      ARCH: x86_64
      LLVM_VERSION: 12
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig+CONFIG_LTO_CLANG_FULL=y
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _c3c1abe5972bc7450bb77c614752b748:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=x86_64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=12 defconfig+CONFIG_LTO_CLANG_THIN=y
    env:
      ARCH: x86_64
      LLVM_VERSION: 12
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig+CONFIG_LTO_CLANG_THIN=y
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _326167b20a9a6ecc06fa9d1b2aba10f3:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=arm LLVM=1 LLVM_VERSION=11 multi_v5_defconfig
    env:
      ARCH: arm
      LLVM_VERSION: 11
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: multi_v5_defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _c60cf38875a5399afa4b11ba4d6ef6a7:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=arm LLVM=1 LLVM_VERSION=11 aspeed_g5_defconfig
    env:
      ARCH: arm
      LLVM_VERSION: 11
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: aspeed_g5_defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _e568393d55ec884da44c831f42852904:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=arm LLVM=1 LLVM_VERSION=11 multi_v7_defconfig
    env:
      ARCH: arm
      LLVM_VERSION: 11
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: multi_v7_defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _f32548095474a8341719241e481106cd:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=arm LLVM=1 LLVM_VERSION=11 multi_v7_defconfig+CONFIG_THUMB2_KERNEL=y
    env:
      ARCH: arm
      LLVM_VERSION: 11
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: multi_v7_defconfig+CONFIG_THUMB2_KERNEL=y
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _1062027f7e3ec07f068a39cf6d23fd8a:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=arm64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=11 defconfig
    env:
      ARCH: arm64
      LLVM_VERSION: 11
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _c582f95a9064a0375b287013fb51d6ec:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=arm64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=11 defconfig+CONFIG_LTO_CLANG_FULL=y
    env:
      ARCH: arm64
      LLVM_VERSION: 11
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig+CONFIG_LTO_CLANG_FULL=y
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _042b760d443056f07b0d0652b83237b7:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=arm64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=11 defconfig+CONFIG_LTO_CLANG_THIN=y
    env:
      ARCH: arm64
      LLVM_VERSION: 11
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig+CONFIG_LTO_CLANG_THIN=y
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _f9f79b9f447e3c9e709435e7975747ca:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=hexagon BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=11 defconfig
    env:
      ARCH: hexagon
      LLVM_VERSION: 11
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _6b25347145c5e89e498ca11233af4912:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=i386 LLVM=1 LLVM_IAS=1 LLVM_VERSION=11 defconfig
    env:
      ARCH: i386
      LLVM_VERSION: 11
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _d5751ecccab4f8123d49f1ff7e7c87f5:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=mips LLVM=1 LD=mips-linux-gnu-ld LLVM_VERSION=11 malta_defconfig+CONFIG_BLK_DEV_INITRD=y+CONFIG_CPU_BIG_ENDIAN=y
    env:
      ARCH: mips
      LLVM_VERSION: 11
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: malta_defconfig+CONFIG_BLK_DEV_INITRD=y+CONFIG_CPU_BIG_ENDIAN=y
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _4199aee554a613fda64b1eacc81b5add:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=mips LLVM=1 LLVM_VERSION=11 malta_defconfig+CONFIG_BLK_DEV_INITRD=y
    env:
      ARCH: mips
      LLVM_VERSION: 11
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: malta_defconfig+CONFIG_BLK_DEV_INITRD=y
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _8190461c1f8057e418b9abae5f927a20:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=powerpc LLVM=1 LLVM_VERSION=11 powernv_defconfig
    env:
      ARCH: powerpc
      LLVM_VERSION: 11
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: powernv_defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _94771c21f822e6468d29dfe9257e8207:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=riscv LLVM=1 LD=riscv64-linux-gnu-ld LLVM_IAS=1 LLVM_VERSION=11 defconfig+CONFIG_EFI=n
    env:
      ARCH: riscv
      LLVM_VERSION: 11
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig+CONFIG_EFI=n
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _aab5675f3f257b359acd5cbd9b06b94f:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=s390 CC=clang LLVM_VERSION=11 defconfig
    env:
      ARCH: s390
      LLVM_VERSION: 11
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _73f8d728902a8cc9c807d77d1aaaedaf:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=x86_64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=11 defconfig
    env:
      ARCH: x86_64
      LLVM_VERSION: 11
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _044e8dd49b6c5811b16c225999f10f9c:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=x86_64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=11 defconfig+CONFIG_LTO_CLANG_FULL=y
    env:
      ARCH: x86_64
      LLVM_VERSION: 11
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig+CONFIG_LTO_CLANG_FULL=y
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _d6ee0f1b2b09bec4fb0fb6707d7213a4:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=x86_64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=11 defconfig+CONFIG_LTO_CLANG_THIN=y
    env:
      ARCH: x86_64
      LLVM_VERSION: 11
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig+CONFIG_LTO_CLANG_THIN=y
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _fd8f5d7d3d038c2feafce905c5abfb27:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=arm LLVM=1 LLVM_VERSION=10 multi_v5_defconfig
    env:
      ARCH: arm
      LLVM_VERSION: 10
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: multi_v5_defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _a751f22e6ba9bbdb1039ee3895125370:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=arm LLVM=1 LD=arm-linux-gnueabihf-ld LLVM_VERSION=10 aspeed_g5_defconfig
    env:
      ARCH: arm
      LLVM_VERSION: 10
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: aspeed_g5_defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _929ef902a624959eb09c397923751212:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=arm LLVM=1 LLVM_VERSION=10 multi_v7_defconfig
    env:
      ARCH: arm
      LLVM_VERSION: 10
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: multi_v7_defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _63a27c3bcba04fab80b30ca454b2a2a9:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=arm LLVM=1 LLVM_VERSION=10 multi_v7_defconfig+CONFIG_THUMB2_KERNEL=y
    env:
      ARCH: arm
      LLVM_VERSION: 10
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: multi_v7_defconfig+CONFIG_THUMB2_KERNEL=y
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _9a919af0584ad3314340747afd5e7e03:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=arm64 LLVM=1 LLVM_VERSION=10 defconfig
    env:
      ARCH: arm64
      LLVM_VERSION: 10
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _eabd42e7d56b3a0a9c15e6397695d96d:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=i386 LLVM=1 LLVM_VERSION=10 defconfig
    env:
      ARCH: i386
      LLVM_VERSION: 10
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _020e9ff944ea1e8472762c351ebd39dd:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=mips LLVM=1 LD=mips-linux-gnu-ld LLVM_VERSION=10 malta_defconfig+CONFIG_BLK_DEV_INITRD=y+CONFIG_CPU_BIG_ENDIAN=y
    env:
      ARCH: mips
      LLVM_VERSION: 10
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: malta_defconfig+CONFIG_BLK_DEV_INITRD=y+CONFIG_CPU_BIG_ENDIAN=y
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _bc8fce7c23996324100110dee4d6e7b6:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=mips LLVM=1 LLVM_VERSION=10 malta_defconfig+CONFIG_BLK_DEV_INITRD=y
    env:
      ARCH: mips
      LLVM_VERSION: 10
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: malta_defconfig+CONFIG_BLK_DEV_INITRD=y
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _77129a466d7b015c998bbca441d09b93:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=s390 CC=clang LLVM_VERSION=10 defconfig
    env:
      ARCH: s390
      LLVM_VERSION: 10
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _470bd3fa38c92f94b430e3a89466a304:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=x86_64 LLVM=1 LLVM_VERSION=10 defconfig
    env:
      ARCH: x86_64
      LLVM_VERSION: 10
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _33f756a58e3f44713fbcc5d419f54896:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=arm LLVM=1 LLVM_IAS=1 LLVM_VERSION=android multi_v5_defconfig
    env:
      ARCH: arm
      LLVM_VERSION: android
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: multi_v5_defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _1e704c0f0de4b2a4bfb08e01f0ce6142:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=arm LLVM=1 LLVM_VERSION=android aspeed_g5_defconfig
    env:
      ARCH: arm
      LLVM_VERSION: android
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: aspeed_g5_defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _87ceb80e8738ca51446e7e1857d39b9c:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=arm LLVM=1 LLVM_IAS=1 LLVM_VERSION=android multi_v7_defconfig
    env:
      ARCH: arm
      LLVM_VERSION: android
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: multi_v7_defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _351114799740fe3119a3b2ce6956a6bb:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=arm LLVM=1 LLVM_IAS=1 LLVM_VERSION=android multi_v7_defconfig+CONFIG_THUMB2_KERNEL=y
    env:
      ARCH: arm
      LLVM_VERSION: android
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: multi_v7_defconfig+CONFIG_THUMB2_KERNEL=y
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _300e2471179b5487f89662afe7517d23:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=arm64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=android defconfig
    env:
      ARCH: arm64
      LLVM_VERSION: android
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _66d5f7613f33d6225179b4f74b52c782:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=arm64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=android defconfig+CONFIG_CPU_BIG_ENDIAN=y
    env:
      ARCH: arm64
      LLVM_VERSION: android
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig+CONFIG_CPU_BIG_ENDIAN=y
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _012f9698c8641a28bfe42b1f88c3eeed:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=arm64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=android defconfig+CONFIG_LTO_CLANG_FULL=y
    env:
      ARCH: arm64
      LLVM_VERSION: android
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig+CONFIG_LTO_CLANG_FULL=y
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _f3ec5ce2d1407ab879240659d45e691f:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=arm64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=android defconfig+CONFIG_LTO_CLANG_THIN=y
    env:
      ARCH: arm64
      LLVM_VERSION: android
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig+CONFIG_LTO_CLANG_THIN=y
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _d40fba30474edc6e71babdc5032a19a1:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=i386 LLVM=1 LLVM_IAS=1 LLVM_VERSION=android defconfig
    env:
      ARCH: i386
      LLVM_VERSION: android
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _3ad4a25550173087651ae615332210cb:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=x86_64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=android defconfig
    env:
      ARCH: x86_64
      LLVM_VERSION: android
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _3a8042d5be17096e2036e17595de3dc2:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=x86_64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=android defconfig+CONFIG_LTO_CLANG_FULL=y
    env:
      ARCH: x86_64
      LLVM_VERSION: android
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig+CONFIG_LTO_CLANG_FULL=y
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _d405aef26ef8bf6ad44a5b678b109329:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=x86_64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=android defconfig+CONFIG_LTO_CLANG_THIN=y
    env:
      ARCH: x86_64
      LLVM_VERSION: android
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig+CONFIG_LTO_CLANG_THIN=y
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _b0ecbe2a369a0aaf6357ba0cbe25a175:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=x86_64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=android defconfig+CONFIG_GCOV_KERNEL=y+CONFIG_GCOV_PROFILE_ALL=y
    env:
      ARCH: x86_64
      LLVM_VERSION: android
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig+CONFIG_GCOV_KERNEL=y+CONFIG_GCOV_PROFILE_ALL=y
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  kick_tuxsuite_allconfigs:
    name: TuxSuite (allconfigs)
    runs-on: ubuntu-20.04
    container: tuxsuite/tuxsuite
    env:
      TUXSUITE_TOKEN: ${{ secrets.TUXSUITE_TOKEN }}
    steps:
    - uses: actions/checkout@v2
    - name: tuxsuite
      run: tuxsuite build-set --set-name allconfigs --json-out builds.json --tux-config tuxsuite/next.tux.yml || true
    - name: save output
      uses: actions/upload-artifact@v2
      with:
        path: builds.json
        name: output_artifact_allconfigs
  _697acf7d42a48e3722c6145f69814f68:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=arm BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 allmodconfig
    env:
      ARCH: arm
      LLVM_VERSION: 13
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allmodconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _e3671bdb6f10d3349593b86cc9b324f6:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=arm BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 allnoconfig
    env:
      ARCH: arm
      LLVM_VERSION: 13
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allnoconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _3c8f7d269bad99a182ef6b8286ce326b:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=arm BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 allyesconfig
    env:
      ARCH: arm
      LLVM_VERSION: 13
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allyesconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _bc93ab0a758b33cf3167fdbdeb2b0705:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=arm64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 allmodconfig
    env:
      ARCH: arm64
      LLVM_VERSION: 13
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allmodconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _d6ae4ccd325979d638473228b3dd8c17:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=arm64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 allmodconfig+CONFIG_GCOV_KERNEL=n+CONFIG_KASAN=n+CONFIG_LTO_CLANG_THIN=y
    env:
      ARCH: arm64
      LLVM_VERSION: 13
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allmodconfig+CONFIG_GCOV_KERNEL=n+CONFIG_KASAN=n+CONFIG_LTO_CLANG_THIN=y
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _c8ae7dd017d7273dcec747aadd9288fe:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=arm64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 allnoconfig
    env:
      ARCH: arm64
      LLVM_VERSION: 13
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allnoconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _a575b3a0efaafab3765963157dfe45f2:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=arm64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 allyesconfig
    env:
      ARCH: arm64
      LLVM_VERSION: 13
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allyesconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _ff86d54e6acbce65590f71efbb2f826b:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=x86_64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 allmodconfig
    env:
      ARCH: x86_64
      LLVM_VERSION: 13
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allmodconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _51db4df26ea58b68c19901411e605b2e:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=x86_64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 allmodconfig+CONFIG_GCOV_KERNEL=n+CONFIG_KASAN=n+CONFIG_LTO_CLANG_THIN=y
    env:
      ARCH: x86_64
      LLVM_VERSION: 13
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allmodconfig+CONFIG_GCOV_KERNEL=n+CONFIG_KASAN=n+CONFIG_LTO_CLANG_THIN=y
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _10bc1944d6f5f29611271ddc67d9e2bd:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=x86_64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 allnoconfig
    env:
      ARCH: x86_64
      LLVM_VERSION: 13
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allnoconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _02922017f2cb19d45aba8492132c7804:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=x86_64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 allyesconfig
    env:
      ARCH: x86_64
      LLVM_VERSION: 13
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allyesconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _e0faf7981c78617941c48bb39357dfa5:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=arm BOOT=0 LLVM=1 LLVM_VERSION=12 allmodconfig
    env:
      ARCH: arm
      LLVM_VERSION: 12
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allmodconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _a3c122fc012130191ce34a8fc1ed2809:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=arm BOOT=0 LLVM=1 LLVM_VERSION=12 allnoconfig
    env:
      ARCH: arm
      LLVM_VERSION: 12
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allnoconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _ac352b89ff0b84ba7baaec44be7d4fd9:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=arm BOOT=0 LLVM=1 LLVM_VERSION=12 allyesconfig
    env:
      ARCH: arm
      LLVM_VERSION: 12
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allyesconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _40d38df5fba1ddfc0ada216733994225:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=arm64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=12 allmodconfig
    env:
      ARCH: arm64
      LLVM_VERSION: 12
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allmodconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _52911b17aeee5908f851ff37465065e7:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=arm64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=12 allmodconfig+CONFIG_GCOV_KERNEL=n+CONFIG_KASAN=n+CONFIG_LTO_CLANG_THIN=y
    env:
      ARCH: arm64
      LLVM_VERSION: 12
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allmodconfig+CONFIG_GCOV_KERNEL=n+CONFIG_KASAN=n+CONFIG_LTO_CLANG_THIN=y
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _02542a0d531fabec931217c22d933bbe:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=arm64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=12 allnoconfig
    env:
      ARCH: arm64
      LLVM_VERSION: 12
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allnoconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _49b1b3bdbd9a67648407749094c083d4:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=arm64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=12 allyesconfig
    env:
      ARCH: arm64
      LLVM_VERSION: 12
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allyesconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _ae767e9ca71f590a84808a724ec476e4:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=x86_64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=12 allmodconfig
    env:
      ARCH: x86_64
      LLVM_VERSION: 12
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allmodconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _2dc2c1c0431802a1cd5273e93cf3a433:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=x86_64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=12 allmodconfig+CONFIG_GCOV_KERNEL=n+CONFIG_KASAN=n+CONFIG_LTO_CLANG_THIN=y
    env:
      ARCH: x86_64
      LLVM_VERSION: 12
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allmodconfig+CONFIG_GCOV_KERNEL=n+CONFIG_KASAN=n+CONFIG_LTO_CLANG_THIN=y
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _78a1c189b48cf1440cdce261b5ec5efe:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=x86_64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=12 allnoconfig
    env:
      ARCH: x86_64
      LLVM_VERSION: 12
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allnoconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _2dff3a82fb364654e103e70b4b546e45:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=x86_64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=12 allyesconfig
    env:
      ARCH: x86_64
      LLVM_VERSION: 12
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allyesconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _79c2e713ed9fc3c4381862731d8a664a:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=arm BOOT=0 LLVM=1 LLVM_VERSION=11 allmodconfig
    env:
      ARCH: arm
      LLVM_VERSION: 11
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allmodconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _56d21d0eba24aae15e0e7ba0cdd3e62a:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=arm BOOT=0 LLVM=1 LLVM_VERSION=11 allnoconfig
    env:
      ARCH: arm
      LLVM_VERSION: 11
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allnoconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _ee24c08b15f5892fb5e38906315c0280:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=arm BOOT=0 LLVM=1 LLVM_VERSION=11 allyesconfig
    env:
      ARCH: arm
      LLVM_VERSION: 11
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allyesconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _51e2eff457ec186a91964ee9c06f04f3:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=arm64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=11 allmodconfig
    env:
      ARCH: arm64
      LLVM_VERSION: 11
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allmodconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _5eef23383e7e212e3e1b286524ee0926:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=arm64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=11 allmodconfig+CONFIG_GCOV_KERNEL=n+CONFIG_KASAN=n+CONFIG_LTO_CLANG_THIN=y
    env:
      ARCH: arm64
      LLVM_VERSION: 11
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allmodconfig+CONFIG_GCOV_KERNEL=n+CONFIG_KASAN=n+CONFIG_LTO_CLANG_THIN=y
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _399a468064cf545cce40196c96162888:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=arm64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=11 allnoconfig
    env:
      ARCH: arm64
      LLVM_VERSION: 11
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allnoconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _8c8559e2e509a14a717cee01ec90bd39:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=arm64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=11 allyesconfig
    env:
      ARCH: arm64
      LLVM_VERSION: 11
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allyesconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _315a83fa22517db93a5781d3052eb372:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=x86_64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=11 allmodconfig
    env:
      ARCH: x86_64
      LLVM_VERSION: 11
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allmodconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _ad4a14cfdd7a60aff188af10540352b6:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=x86_64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=11 allmodconfig+CONFIG_GCOV_KERNEL=n+CONFIG_KASAN=n+CONFIG_LTO_CLANG_THIN=y
    env:
      ARCH: x86_64
      LLVM_VERSION: 11
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allmodconfig+CONFIG_GCOV_KERNEL=n+CONFIG_KASAN=n+CONFIG_LTO_CLANG_THIN=y
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _d5032c6b0134fa08249732baa271b04a:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=x86_64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=11 allnoconfig
    env:
      ARCH: x86_64
      LLVM_VERSION: 11
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allnoconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _f93dc26c868cb14278bd57d172f7b70e:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=x86_64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=11 allyesconfig
    env:
      ARCH: x86_64
      LLVM_VERSION: 11
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allyesconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _ddf8469de853cf3933134d74e60236c8:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=arm BOOT=0 LLVM=1 LLVM_VERSION=10 allmodconfig
    env:
      ARCH: arm
      LLVM_VERSION: 10
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allmodconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _2583338fda83d6bb9e0812d6893b5e66:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=arm BOOT=0 LLVM=1 LLVM_VERSION=10 allnoconfig
    env:
      ARCH: arm
      LLVM_VERSION: 10
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allnoconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _bdbb31074288296e76bd079fa36d9c51:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=arm BOOT=0 LLVM=1 LLVM_VERSION=10 allyesconfig
    env:
      ARCH: arm
      LLVM_VERSION: 10
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allyesconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _a378f3a9640f6d51ad394cfd3e58cdcf:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=arm64 BOOT=0 LLVM=1 LLVM_VERSION=10 allnoconfig
    env:
      ARCH: arm64
      LLVM_VERSION: 10
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allnoconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _7404b0f622477899bc4752b39f7c92fe:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=x86_64 BOOT=0 LLVM=1 LLVM_VERSION=10 allnoconfig
    env:
      ARCH: x86_64
      LLVM_VERSION: 10
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allnoconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _11a0db5926cfedaac47a461c1f768b52:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=arm BOOT=0 LLVM=1 LLVM_VERSION=android allmodconfig
    env:
      ARCH: arm
      LLVM_VERSION: android
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allmodconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _0bd45e7bf965a5baf08290e2f1592b0e:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=arm BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=android allnoconfig
    env:
      ARCH: arm
      LLVM_VERSION: android
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allnoconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _b37c37f00a5fab86706f218702b50a50:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=arm BOOT=0 LLVM=1 LLVM_VERSION=android allyesconfig
    env:
      ARCH: arm
      LLVM_VERSION: android
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allyesconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _0a2662d69f899d9d4f0fecc38bed6d41:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=arm64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=android allmodconfig
    env:
      ARCH: arm64
      LLVM_VERSION: android
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allmodconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _509b45bccf9f9caab84def233b90d81b:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=arm64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=android allmodconfig+CONFIG_GCOV_KERNEL=n+CONFIG_KASAN=n+CONFIG_LTO_CLANG_THIN=y
    env:
      ARCH: arm64
      LLVM_VERSION: android
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allmodconfig+CONFIG_GCOV_KERNEL=n+CONFIG_KASAN=n+CONFIG_LTO_CLANG_THIN=y
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _b0fbaba94853b2f26c458cd0c3b95f2f:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=arm64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=android allnoconfig
    env:
      ARCH: arm64
      LLVM_VERSION: android
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allnoconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _e357ce8f7d2d716ba07663203d18eb52:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=arm64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=android allyesconfig
    env:
      ARCH: arm64
      LLVM_VERSION: android
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allyesconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _e38e51bfe42f6ce103710889aa946c01:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=x86_64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=android allmodconfig
    env:
      ARCH: x86_64
      LLVM_VERSION: android
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allmodconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _f7ee75927f0273e4652c17902a6dc812:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=x86_64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=android allmodconfig+CONFIG_GCOV_KERNEL=n+CONFIG_KASAN=n+CONFIG_LTO_CLANG_THIN=y
    env:
      ARCH: x86_64
      LLVM_VERSION: android
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allmodconfig+CONFIG_GCOV_KERNEL=n+CONFIG_KASAN=n+CONFIG_LTO_CLANG_THIN=y
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _00318ac7d697c430359de1e4e903d7eb:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=x86_64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=android allnoconfig
    env:
      ARCH: x86_64
      LLVM_VERSION: android
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allnoconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _19dd04f50424074ba37661160bf0204c:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=x86_64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=android allyesconfig
    env:
      ARCH: x86_64
      LLVM_VERSION: android
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allyesconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py

