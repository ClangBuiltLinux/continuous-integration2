# DO NOT MODIFY MANUALLY!
# This file has been autogenerated by invoking:
# $ ./generate_workflow.py android15-6.6
name: android15-6.6 (clang-22)
'on':
  push:
    branches:
    - presubmit/*
    paths:
    - check_logs.py
    - utils.py
    - tuxsuite/android15-6.6-clang-22.tux.yml
    - .github/workflows/android15-6.6-clang-22.yml
  schedule:
  - cron: 0 12 * * 2,4
  workflow_dispatch: null
permissions: read-all
jobs:
  check_patches:
    name: Check that patches are applicable
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: check-patches-apply.py
      run: python3 scripts/check-patches-apply.py --patches-dir patches/android15-6.6 --repo https://android.googlesource.com/kernel/common.git --ref android15-6.6
  check_cache:
    name: Check Cache
    runs-on: ubuntu-latest
    container: tuxmake/x86_64_clang-nightly
    needs: check_patches
    env:
      GIT_REPO: https://android.googlesource.com/kernel/common.git
      GIT_REF: android15-6.6
    outputs:
      output: ${{ steps.step2.outputs.output }}
      status: ${{ steps.step2.outputs.status }}
    steps:
    - uses: actions/checkout@v4
    - name: pip install -r requirements.txt
      run: apt-get update && apt-get install -y python3-venv && python3 -m venv venv && . venv/bin/activate && pip install -r requirements.txt
    - name: python check_cache.py
      id: step1
      continue-on-error: true
      run: . venv/bin/activate && python caching/check.py -w '${{ github.workflow }}' -g ${{ secrets.REPO_SCOPED_PAT }} -r ${{ env.GIT_REF }} -o ${{ env.GIT_REPO }}
    - name: Save exit code to GITHUB_OUTPUT
      id: step2
      run: echo "output=${{ steps.step1.outcome }}" >> "$GITHUB_OUTPUT" && echo "status=$CACHE_PASS" >> "$GITHUB_OUTPUT"
  kick_tuxsuite_defconfigs:
    name: TuxSuite (defconfigs)
    runs-on: ubuntu-latest
    container: tuxsuite/tuxsuite
    needs:
    - check_cache
    - check_patches
    env:
      TUXSUITE_TOKEN: ${{ secrets.TUXSUITE_TOKEN }}
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    timeout-minutes: 480
    steps:
    - name: Checking Cache Pass
      if: ${{ needs.check_cache.outputs.output == 'success' && github.event_name != 'workflow_dispatch' && needs.check_cache.outputs.status == 'pass' }}
      run: echo 'Cache HIT on previously PASSED build. Passing this build to avoid redundant work.' && exit 0
    - name: Checking Cache Fail
      if: ${{ needs.check_cache.outputs.output == 'success' && github.event_name != 'workflow_dispatch' && needs.check_cache.outputs.status == 'fail' }}
      run: echo 'Cache HIT on previously FAILED build. Failing this build to avoid redundant work.' && exit 1
    - uses: actions/checkout@v4
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
    - name: tuxsuite
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
      run: tuxsuite plan --git-repo https://android.googlesource.com/kernel/common.git --git-ref android15-6.6 --job-name defconfigs --json-out builds.json tuxsuite/android15-6.6-clang-22.tux.yml || true
    - name: Update Cache Build Status
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
      run: python caching/update.py
    - name: save builds.json
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
      uses: actions/upload-artifact@v4
      with:
        path: builds.json
        name: output_artifact_defconfigs
        if-no-files-found: error
    - name: generate boot-utils.json
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
      run: python3 scripts/generate-boot-utils-json.py ${{ secrets.GITHUB_TOKEN }}
    - name: save boot-utils.json
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
      uses: actions/upload-artifact@v4
      with:
        path: boot-utils.json
        name: boot_utils_json_defconfigs
        if-no-files-found: error
  _fbc3cb484c3827a74543da32ff66e2b3:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=arm LLVM=1 LLVM_IAS=1 LLVM_VERSION=22 multi_v7_defconfig+CONFIG_THUMB2_KERNEL=y
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm
      LLVM_VERSION: 22
      BOOT: 1
      CONFIG: multi_v7_defconfig+CONFIG_THUMB2_KERNEL=y
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _29df985ee757664dbc11a17e6248585b:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=arm64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=22 gki_defconfig+CONFIG_DEBUG_INFO_COMPRESSED_ZSTD=n
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm64
      LLVM_VERSION: 22
      BOOT: 1
      CONFIG: gki_defconfig+CONFIG_DEBUG_INFO_COMPRESSED_ZSTD=n
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _f1ea8d09076c9fca5010a03f9d296c44:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=x86_64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=22 gki_defconfig+CONFIG_DEBUG_INFO_COMPRESSED_ZSTD=n
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: x86_64
      LLVM_VERSION: 22
      BOOT: 1
      CONFIG: gki_defconfig+CONFIG_DEBUG_INFO_COMPRESSED_ZSTD=n
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  kick_tuxsuite_allconfigs:
    name: TuxSuite (allconfigs)
    runs-on: ubuntu-latest
    container: tuxsuite/tuxsuite
    needs:
    - check_cache
    - check_patches
    env:
      TUXSUITE_TOKEN: ${{ secrets.TUXSUITE_TOKEN }}
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    timeout-minutes: 480
    steps:
    - name: Checking Cache Pass
      if: ${{ needs.check_cache.outputs.output == 'success' && github.event_name != 'workflow_dispatch' && needs.check_cache.outputs.status == 'pass' }}
      run: echo 'Cache HIT on previously PASSED build. Passing this build to avoid redundant work.' && exit 0
    - name: Checking Cache Fail
      if: ${{ needs.check_cache.outputs.output == 'success' && github.event_name != 'workflow_dispatch' && needs.check_cache.outputs.status == 'fail' }}
      run: echo 'Cache HIT on previously FAILED build. Failing this build to avoid redundant work.' && exit 1
    - uses: actions/checkout@v4
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
    - name: tuxsuite
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
      run: tuxsuite plan --git-repo https://android.googlesource.com/kernel/common.git --git-ref android15-6.6 --job-name allconfigs --json-out builds.json tuxsuite/android15-6.6-clang-22.tux.yml || true
    - name: Update Cache Build Status
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
      run: python caching/update.py
    - name: save builds.json
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
      uses: actions/upload-artifact@v4
      with:
        path: builds.json
        name: output_artifact_allconfigs
        if-no-files-found: error
    - name: generate boot-utils.json
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
      run: python3 scripts/generate-boot-utils-json.py ${{ secrets.GITHUB_TOKEN }}
    - name: save boot-utils.json
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
      uses: actions/upload-artifact@v4
      with:
        path: boot-utils.json
        name: boot_utils_json_allconfigs
        if-no-files-found: error
  _a7ee2ce20ec3cb42d5cb3ed2d87ff71e:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_allconfigs
    - check_cache
    - check_patches
    name: ARCH=arm BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=22 allmodconfig+CONFIG_WERROR=n+CONFIG_DRM_WERROR=n
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm
      LLVM_VERSION: 22
      BOOT: 0
      CONFIG: allmodconfig+CONFIG_WERROR=n+CONFIG_DRM_WERROR=n
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_allconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_allconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py

