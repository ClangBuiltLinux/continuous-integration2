# DO NOT MODIFY MANUALLY!
# This file has been autogenerated by invoking:
# $ ./generate_workflow.py < generator.yml android-4.14 > .github/workflows/android-4.14.yml
name: android-4.14
'on':
  push:
    branches:
    - main
    - presubmit/*
    paths:
    - check_logs.py
    - utils.py
    - tuxsuite/android-4.14.tux.yml
    - .github/workflows/android-4.14.yml
  schedule:
  - cron: 0 0 * * *
  workflow_dispatch: null
jobs:
  kick_tuxsuite_defconfigs:
    name: TuxSuite (defconfigs)
    runs-on: ubuntu-20.04
    container: tuxsuite/tuxsuite
    env:
      TUXSUITE_TOKEN: ${{ secrets.TUXSUITE_TOKEN }}
    steps:
    - uses: actions/checkout@v2
    - name: tuxsuite
      run: tuxsuite build-set --set-name defconfigs --json-out builds.json --tux-config tuxsuite/android-4.14.tux.yml || true
    - name: save output
      uses: actions/upload-artifact@v2
      with:
        path: builds.json
        name: output_artifact_defconfigs
        if-no-files-found: error
  _524451a8302126df1422580acd7db20f:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=arm64 CC=clang LD=ld.lld LLVM_IAS=0 LLVM_VERSION=14 cuttlefish_defconfig
    env:
      ARCH: arm64
      LLVM_VERSION: 14
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: cuttlefish_defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _ef863dc39f2a6ed49f7d57f3ab3e12cb:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=x86_64 CC=clang LD=ld.lld LLVM_IAS=0 LLVM_VERSION=14 x86_64_cuttlefish_defconfig
    env:
      ARCH: x86_64
      LLVM_VERSION: 14
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: x86_64_cuttlefish_defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _6fc223e1966ab7052b25026d1082ebff:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=arm64 CC=clang LD=ld.lld LLVM_IAS=0 LLVM_VERSION=13 cuttlefish_defconfig
    env:
      ARCH: arm64
      LLVM_VERSION: 13
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: cuttlefish_defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _6f3686139820fd568cad0dcb30bdf6c8:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=x86_64 CC=clang LD=ld.lld LLVM_IAS=0 LLVM_VERSION=13 x86_64_cuttlefish_defconfig
    env:
      ARCH: x86_64
      LLVM_VERSION: 13
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: x86_64_cuttlefish_defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _1c4c36bd309bb6f780cfdcb0ac801fb1:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=arm64 CC=clang LD=ld.lld LLVM_IAS=0 LLVM_VERSION=12 cuttlefish_defconfig
    env:
      ARCH: arm64
      LLVM_VERSION: 12
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: cuttlefish_defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _a3d0345916f4a8b408b5e5bdf8f9cbec:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=x86_64 CC=clang LD=ld.lld LLVM_IAS=0 LLVM_VERSION=12 x86_64_cuttlefish_defconfig
    env:
      ARCH: x86_64
      LLVM_VERSION: 12
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: x86_64_cuttlefish_defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _f41a40b9ca513a23053de3c8ddbc5909:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=arm64 CC=clang LD=ld.lld LLVM_IAS=0 LLVM_VERSION=android cuttlefish_defconfig
    env:
      ARCH: arm64
      LLVM_VERSION: android
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: cuttlefish_defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _3c9cc1628795dbafc5b9170f79d448ce:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=x86_64 CC=clang LD=ld.lld LLVM_IAS=0 LLVM_VERSION=android x86_64_cuttlefish_defconfig
    env:
      ARCH: x86_64
      LLVM_VERSION: android
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: x86_64_cuttlefish_defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py

