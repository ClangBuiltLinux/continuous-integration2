# DO NOT MODIFY MANUALLY!
# This file has been autogenerated by invoking:
# $ ./generate_workflow.py next
name: next (clang-13)
'on':
  push:
    branches:
    - presubmit/*
    paths:
    - check_logs.py
    - utils.py
    - tuxsuite/next-clang-13.tux.yml
    - .github/workflows/next-clang-13.yml
  schedule:
  - cron: 0 12 * * 1,2,3,4,5
  workflow_dispatch: null
permissions: read-all
jobs:
  check_patches:
    name: Check that patches are applicable
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: check-patches-apply.py
      run: python3 scripts/check-patches-apply.py --patches-dir patches/next --repo https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git --ref master
  check_cache:
    name: Check Cache
    runs-on: ubuntu-latest
    container: tuxmake/x86_64_korg-clang-13
    needs: check_patches
    env:
      GIT_REPO: https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
      GIT_REF: master
    outputs:
      output: ${{ steps.step2.outputs.output }}
      status: ${{ steps.step2.outputs.status }}
    steps:
    - uses: actions/checkout@v4
    - name: pip install -r requirements.txt
      run: apt-get update && apt-get install -y python3-venv && python3 -m venv venv && . venv/bin/activate && pip install -r requirements.txt
    - name: python check_cache.py
      id: step1
      continue-on-error: true
      run: . venv/bin/activate && python caching/check.py -w '${{ github.workflow }}' -g ${{ secrets.REPO_SCOPED_PAT }} -r ${{ env.GIT_REF }} -o ${{ env.GIT_REPO }}
    - name: Save exit code to GITHUB_OUTPUT
      id: step2
      run: echo "output=${{ steps.step1.outcome }}" >> "$GITHUB_OUTPUT" && echo "status=$CACHE_PASS" >> "$GITHUB_OUTPUT"
  kick_tuxsuite_defconfigs:
    name: TuxSuite (defconfigs)
    runs-on: ubuntu-latest
    container: tuxsuite/tuxsuite
    needs:
    - check_cache
    - check_patches
    env:
      TUXSUITE_TOKEN: ${{ secrets.TUXSUITE_TOKEN }}
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    timeout-minutes: 480
    steps:
    - name: Checking Cache Pass
      if: ${{ needs.check_cache.outputs.output == 'success' && github.event_name != 'workflow_dispatch' && needs.check_cache.outputs.status == 'pass' }}
      run: echo 'Cache HIT on previously PASSED build. Passing this build to avoid redundant work.' && exit 0
    - name: Checking Cache Fail
      if: ${{ needs.check_cache.outputs.output == 'success' && github.event_name != 'workflow_dispatch' && needs.check_cache.outputs.status == 'fail' }}
      run: echo 'Cache HIT on previously FAILED build. Failing this build to avoid redundant work.' && exit 1
    - uses: actions/checkout@v4
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
    - name: tuxsuite
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
      run: tuxsuite plan --git-repo https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git --git-ref master --job-name defconfigs --json-out builds.json tuxsuite/next-clang-13.tux.yml || true
    - name: Update Cache Build Status
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
      run: python caching/update.py
    - name: save builds.json
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
      uses: actions/upload-artifact@v4
      with:
        path: builds.json
        name: output_artifact_defconfigs
        if-no-files-found: error
    - name: generate boot-utils.json
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
      run: python3 scripts/generate-boot-utils-json.py ${{ secrets.GITHUB_TOKEN }}
    - name: save boot-utils.json
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
      uses: actions/upload-artifact@v4
      with:
        path: boot-utils.json
        name: boot_utils_json_defconfigs
        if-no-files-found: error
  _1158c1dfe5f9fcc225240c547be18fda:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=arm LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 multi_v5_defconfig
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm
      LLVM_VERSION: 13
      BOOT: 1
      CONFIG: multi_v5_defconfig
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _3dcc2dad9e1ef4e6a3f358ffef73f7fe:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=arm LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 aspeed_g5_defconfig
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm
      LLVM_VERSION: 13
      BOOT: 1
      CONFIG: aspeed_g5_defconfig
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _9532604fe2c353a710edd757453b4457:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=arm LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 multi_v7_defconfig
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm
      LLVM_VERSION: 13
      BOOT: 1
      CONFIG: multi_v7_defconfig
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _f312f8cee59fa1e3e85e4b3262690a47:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=arm LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 multi_v7_defconfig+CONFIG_THUMB2_KERNEL=y
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm
      LLVM_VERSION: 13
      BOOT: 1
      CONFIG: multi_v7_defconfig+CONFIG_THUMB2_KERNEL=y
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _e3d4670a9d16ba924426904627be1c21:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=arm BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 imx_v4_v5_defconfig
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm
      LLVM_VERSION: 13
      BOOT: 0
      CONFIG: imx_v4_v5_defconfig
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _35cea70f2251d0631c8724eebdd1a1f1:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=arm BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 omap2plus_defconfig
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm
      LLVM_VERSION: 13
      BOOT: 0
      CONFIG: omap2plus_defconfig
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _a626e641850a6dd63ebbb6625691b9bc:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=arm LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 multi_v7_defconfig+CONFIG_ARM_LPAE=y+CONFIG_UNWINDER_FRAME_POINTER=y
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm
      LLVM_VERSION: 13
      BOOT: 1
      CONFIG: multi_v7_defconfig+CONFIG_ARM_LPAE=y+CONFIG_UNWINDER_FRAME_POINTER=y
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _210faf86b075b31ec48b4fa5276daa01:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=arm64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 defconfig
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm64
      LLVM_VERSION: 13
      BOOT: 1
      CONFIG: defconfig
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _db43a82d57f22c3d14f773847535c8d4:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=arm64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 defconfig+CONFIG_LTO_CLANG_FULL=y
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm64
      LLVM_VERSION: 13
      BOOT: 1
      CONFIG: defconfig+CONFIG_LTO_CLANG_FULL=y
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _8fbad23db8694016590b623a4a748b10:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=arm64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 defconfig+CONFIG_LTO_CLANG_THIN=y
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm64
      LLVM_VERSION: 13
      BOOT: 1
      CONFIG: defconfig+CONFIG_LTO_CLANG_THIN=y
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _bc173c48495d561e42588f436c88f439:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=arm64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 defconfig+CONFIG_FTRACE=y+CONFIG_KASAN=y+CONFIG_KASAN_KUNIT_TEST=y+CONFIG_KASAN_VMALLOC=y+CONFIG_KUNIT=y
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm64
      LLVM_VERSION: 13
      BOOT: 1
      CONFIG: defconfig+CONFIG_FTRACE=y+CONFIG_KASAN=y+CONFIG_KASAN_KUNIT_TEST=y+CONFIG_KASAN_VMALLOC=y+CONFIG_KUNIT=y
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _7abf7bbf09eae974d1e5b19c10f12f13:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=arm64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 defconfig+CONFIG_FTRACE=y+CONFIG_KASAN=y+CONFIG_KASAN_KUNIT_TEST=y+CONFIG_KASAN_SW_TAGS=y+CONFIG_KUNIT=y
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm64
      LLVM_VERSION: 13
      BOOT: 1
      CONFIG: defconfig+CONFIG_FTRACE=y+CONFIG_KASAN=y+CONFIG_KASAN_KUNIT_TEST=y+CONFIG_KASAN_SW_TAGS=y+CONFIG_KUNIT=y
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _4a0461637a204ca69224c82f62ab78d2:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=arm64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 defconfig+CONFIG_UBSAN=y
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm64
      LLVM_VERSION: 13
      BOOT: 1
      CONFIG: defconfig+CONFIG_UBSAN=y
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _e23f00f1b9cec9a3a69e648c386400ad:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=hexagon BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 defconfig
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: hexagon
      LLVM_VERSION: 13
      BOOT: 0
      CONFIG: defconfig
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _41bfb2f60b3f93f83d0159ac988829d1:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=mips LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 malta_defconfig+CONFIG_BLK_DEV_INITRD=y+CONFIG_CPU_BIG_ENDIAN=y
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: mips
      LLVM_VERSION: 13
      BOOT: 1
      CONFIG: malta_defconfig+CONFIG_BLK_DEV_INITRD=y+CONFIG_CPU_BIG_ENDIAN=y
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _e584cbd03ae7b4888ad3d4444ace58d7:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=mips LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 malta_defconfig+CONFIG_BLK_DEV_INITRD=y
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: mips
      LLVM_VERSION: 13
      BOOT: 1
      CONFIG: malta_defconfig+CONFIG_BLK_DEV_INITRD=y
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _cf44874aa4c64cdf33caaf0251e0b764:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=powerpc LLVM=1 LLVM_IAS=0 LLVM_VERSION=13 ppc64_guest_defconfig+CONFIG_PPC_DISABLE_WERROR=y
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: powerpc
      LLVM_VERSION: 13
      BOOT: 1
      CONFIG: ppc64_guest_defconfig+CONFIG_PPC_DISABLE_WERROR=y
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _848b558acb7e2487ba2d59cd1a85aa7a:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=powerpc LLVM=1 LLVM_IAS=0 LLVM_VERSION=13 powernv_defconfig
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: powerpc
      LLVM_VERSION: 13
      BOOT: 1
      CONFIG: powernv_defconfig
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _4908c92c4d725c03f7b7115b6b457e9e:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=riscv LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 defconfig
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: riscv
      LLVM_VERSION: 13
      BOOT: 1
      CONFIG: defconfig
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _171147249819cb6e8281ffa046070e68:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=um LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 defconfig
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: um
      LLVM_VERSION: 13
      BOOT: 1
      CONFIG: defconfig
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  kick_tuxsuite_distribution_configs:
    name: TuxSuite (distribution_configs)
    runs-on: ubuntu-latest
    container: tuxsuite/tuxsuite
    needs:
    - check_cache
    - check_patches
    env:
      TUXSUITE_TOKEN: ${{ secrets.TUXSUITE_TOKEN }}
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    timeout-minutes: 480
    steps:
    - name: Checking Cache Pass
      if: ${{ needs.check_cache.outputs.output == 'success' && github.event_name != 'workflow_dispatch' && needs.check_cache.outputs.status == 'pass' }}
      run: echo 'Cache HIT on previously PASSED build. Passing this build to avoid redundant work.' && exit 0
    - name: Checking Cache Fail
      if: ${{ needs.check_cache.outputs.output == 'success' && github.event_name != 'workflow_dispatch' && needs.check_cache.outputs.status == 'fail' }}
      run: echo 'Cache HIT on previously FAILED build. Failing this build to avoid redundant work.' && exit 1
    - uses: actions/checkout@v4
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
    - name: tuxsuite
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
      run: tuxsuite plan --git-repo https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git --git-ref master --job-name distribution_configs --json-out builds.json tuxsuite/next-clang-13.tux.yml || true
    - name: Update Cache Build Status
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
      run: python caching/update.py
    - name: save builds.json
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
      uses: actions/upload-artifact@v4
      with:
        path: builds.json
        name: output_artifact_distribution_configs
        if-no-files-found: error
    - name: generate boot-utils.json
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
      run: python3 scripts/generate-boot-utils-json.py ${{ secrets.GITHUB_TOKEN }}
    - name: save boot-utils.json
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
      uses: actions/upload-artifact@v4
      with:
        path: boot-utils.json
        name: boot_utils_json_distribution_configs
        if-no-files-found: error
  _1dad89b577653ddc683e87e9409fc409:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_distribution_configs
    - check_cache
    - check_patches
    name: ARCH=arm LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 https://git.alpinelinux.org/aports/plain/community/linux-edge/config-edge.armv7
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm
      LLVM_VERSION: 13
      BOOT: 1
      CONFIG: https://git.alpinelinux.org/aports/plain/community/linux-edge/config-edge.armv7
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_distribution_configs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_distribution_configs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _1435de1ebd93ba0b4f841682571dd69b:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_distribution_configs
    - check_cache
    - check_patches
    name: ARCH=arm LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 https://github.com/openSUSE/kernel-source/raw/master/config/armv7hl/default
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm
      LLVM_VERSION: 13
      BOOT: 1
      CONFIG: https://github.com/openSUSE/kernel-source/raw/master/config/armv7hl/default
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_distribution_configs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_distribution_configs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _41e97db7d8ed584321ef7865ba127060:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_distribution_configs
    - check_cache
    - check_patches
    name: ARCH=arm64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 https://git.alpinelinux.org/aports/plain/community/linux-edge/config-edge.aarch64
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm64
      LLVM_VERSION: 13
      BOOT: 1
      CONFIG: https://git.alpinelinux.org/aports/plain/community/linux-edge/config-edge.aarch64
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_distribution_configs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_distribution_configs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _4c0d22a71caeaa3dcc5aa0d3b7651cdf:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_distribution_configs
    - check_cache
    - check_patches
    name: ARCH=arm64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 https://src.fedoraproject.org/rpms/kernel/raw/rawhide/f/kernel-aarch64-fedora.config
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm64
      LLVM_VERSION: 13
      BOOT: 1
      CONFIG: https://src.fedoraproject.org/rpms/kernel/raw/rawhide/f/kernel-aarch64-fedora.config
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_distribution_configs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_distribution_configs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _dfc9970609310645c60d53981a32a0e3:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_distribution_configs
    - check_cache
    - check_patches
    name: ARCH=arm64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 https://github.com/openSUSE/kernel-source/raw/master/config/arm64/default+CONFIG_DEBUG_INFO_BTF=n
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm64
      LLVM_VERSION: 13
      BOOT: 1
      CONFIG: https://github.com/openSUSE/kernel-source/raw/master/config/arm64/default+CONFIG_DEBUG_INFO_BTF=n
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_distribution_configs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_distribution_configs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _6325b5ec37ba4b2fa4865821ad485593:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_distribution_configs
    - check_cache
    - check_patches
    name: ARCH=powerpc CC=clang LLVM_IAS=0 LLVM_VERSION=13 https://src.fedoraproject.org/rpms/kernel/raw/rawhide/f/kernel-ppc64le-fedora.config+CONFIG_DRM_WERROR=n
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: powerpc
      LLVM_VERSION: 13
      BOOT: 1
      CONFIG: https://src.fedoraproject.org/rpms/kernel/raw/rawhide/f/kernel-ppc64le-fedora.config+CONFIG_DRM_WERROR=n
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_distribution_configs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_distribution_configs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _409b28e38bc385e6d3d3068f3489ea8c:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_distribution_configs
    - check_cache
    - check_patches
    name: ARCH=powerpc CC=clang LLVM_IAS=0 LLVM_VERSION=13 https://github.com/openSUSE/kernel-source/raw/master/config/ppc64le/default
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: powerpc
      LLVM_VERSION: 13
      BOOT: 1
      CONFIG: https://github.com/openSUSE/kernel-source/raw/master/config/ppc64le/default
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_distribution_configs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_distribution_configs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _fb6058c4a5aade8dd9afe91a3e96a21a:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_distribution_configs
    - check_cache
    - check_patches
    name: ARCH=riscv LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 https://git.alpinelinux.org/aports/plain/community/linux-edge/config-edge.riscv64
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: riscv
      LLVM_VERSION: 13
      BOOT: 1
      CONFIG: https://git.alpinelinux.org/aports/plain/community/linux-edge/config-edge.riscv64
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_distribution_configs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_distribution_configs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _910c059dd4b893c99fcc0c4c0f05a87a:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_distribution_configs
    - check_cache
    - check_patches
    name: ARCH=riscv LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 https://github.com/openSUSE/kernel-source/raw/master/config/riscv64/default
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: riscv
      LLVM_VERSION: 13
      BOOT: 1
      CONFIG: https://github.com/openSUSE/kernel-source/raw/master/config/riscv64/default
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_distribution_configs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_distribution_configs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  kick_tuxsuite_allconfigs:
    name: TuxSuite (allconfigs)
    runs-on: ubuntu-latest
    container: tuxsuite/tuxsuite
    needs:
    - check_cache
    - check_patches
    env:
      TUXSUITE_TOKEN: ${{ secrets.TUXSUITE_TOKEN }}
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    timeout-minutes: 480
    steps:
    - name: Checking Cache Pass
      if: ${{ needs.check_cache.outputs.output == 'success' && github.event_name != 'workflow_dispatch' && needs.check_cache.outputs.status == 'pass' }}
      run: echo 'Cache HIT on previously PASSED build. Passing this build to avoid redundant work.' && exit 0
    - name: Checking Cache Fail
      if: ${{ needs.check_cache.outputs.output == 'success' && github.event_name != 'workflow_dispatch' && needs.check_cache.outputs.status == 'fail' }}
      run: echo 'Cache HIT on previously FAILED build. Failing this build to avoid redundant work.' && exit 1
    - uses: actions/checkout@v4
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
    - name: tuxsuite
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
      run: tuxsuite plan --git-repo https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git --git-ref master --job-name allconfigs --json-out builds.json tuxsuite/next-clang-13.tux.yml || true
    - name: Update Cache Build Status
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
      run: python caching/update.py
    - name: save builds.json
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
      uses: actions/upload-artifact@v4
      with:
        path: builds.json
        name: output_artifact_allconfigs
        if-no-files-found: error
    - name: generate boot-utils.json
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
      run: python3 scripts/generate-boot-utils-json.py ${{ secrets.GITHUB_TOKEN }}
    - name: save boot-utils.json
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
      uses: actions/upload-artifact@v4
      with:
        path: boot-utils.json
        name: boot_utils_json_allconfigs
        if-no-files-found: error
  _2309c816a58459d87da53f6d2074f5d8:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_allconfigs
    - check_cache
    - check_patches
    name: ARCH=arm BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 allmodconfig+CONFIG_WERROR=n+CONFIG_DRM_WERROR=n
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm
      LLVM_VERSION: 13
      BOOT: 0
      CONFIG: allmodconfig+CONFIG_WERROR=n+CONFIG_DRM_WERROR=n
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_allconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_allconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _e3671bdb6f10d3349593b86cc9b324f6:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_allconfigs
    - check_cache
    - check_patches
    name: ARCH=arm BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 allnoconfig
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm
      LLVM_VERSION: 13
      BOOT: 0
      CONFIG: allnoconfig
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_allconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_allconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _1d1b9fe50f6e08aeeaaaf80cf8333f67:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_allconfigs
    - check_cache
    - check_patches
    name: ARCH=arm BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 allyesconfig+CONFIG_WERROR=n+CONFIG_DRM_WERROR=n
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm
      LLVM_VERSION: 13
      BOOT: 0
      CONFIG: allyesconfig+CONFIG_WERROR=n+CONFIG_DRM_WERROR=n
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_allconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_allconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _bc93ab0a758b33cf3167fdbdeb2b0705:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_allconfigs
    - check_cache
    - check_patches
    name: ARCH=arm64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 allmodconfig
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm64
      LLVM_VERSION: 13
      BOOT: 0
      CONFIG: allmodconfig
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_allconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_allconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _d6ae4ccd325979d638473228b3dd8c17:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_allconfigs
    - check_cache
    - check_patches
    name: ARCH=arm64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 allmodconfig+CONFIG_GCOV_KERNEL=n+CONFIG_KASAN=n+CONFIG_LTO_CLANG_THIN=y
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm64
      LLVM_VERSION: 13
      BOOT: 0
      CONFIG: allmodconfig+CONFIG_GCOV_KERNEL=n+CONFIG_KASAN=n+CONFIG_LTO_CLANG_THIN=y
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_allconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_allconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _c8ae7dd017d7273dcec747aadd9288fe:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_allconfigs
    - check_cache
    - check_patches
    name: ARCH=arm64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 allnoconfig
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm64
      LLVM_VERSION: 13
      BOOT: 0
      CONFIG: allnoconfig
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_allconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_allconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _a575b3a0efaafab3765963157dfe45f2:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_allconfigs
    - check_cache
    - check_patches
    name: ARCH=arm64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 allyesconfig
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm64
      LLVM_VERSION: 13
      BOOT: 0
      CONFIG: allyesconfig
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_allconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_allconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _221a94fa84a8ab62ba4000dfdfd93361:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_allconfigs
    - check_cache
    - check_patches
    name: ARCH=hexagon BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 allmodconfig+CONFIG_WERROR=n+CONFIG_DRM_WERROR=n
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: hexagon
      LLVM_VERSION: 13
      BOOT: 0
      CONFIG: allmodconfig+CONFIG_WERROR=n+CONFIG_DRM_WERROR=n
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_allconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_allconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _65bd21e9811b11ed579b50474495f671:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_allconfigs
    - check_cache
    - check_patches
    name: ARCH=riscv BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 allmodconfig+CONFIG_WERROR=n+CONFIG_DRM_WERROR=n
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: riscv
      LLVM_VERSION: 13
      BOOT: 0
      CONFIG: allmodconfig+CONFIG_WERROR=n+CONFIG_DRM_WERROR=n
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_allconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_allconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py

