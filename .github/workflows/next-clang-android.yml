# DO NOT MODIFY MANUALLY!
# This file has been autogenerated by invoking:
# $ ./generate_workflow.py next
name: next (clang-android)
'on':
  push:
    branches:
    - presubmit/*
    paths:
    - check_logs.py
    - utils.py
    - tuxsuite/next-clang-android.tux.yml
    - .github/workflows/next-clang-android.yml
  schedule:
  - cron: 0 12 * * 1,2,3,4,5
  workflow_dispatch: null
permissions: read-all
jobs:
  check_patches:
    name: Check that patches are applicable
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: check-patches-apply.py
      run: python3 scripts/check-patches-apply.py --patches-dir patches/next --repo https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git --ref master
  check_cache:
    name: Check Cache
    runs-on: ubuntu-latest
    container: tuxmake/x86_64_clang-android
    needs: check_patches
    env:
      GIT_REPO: https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git
      GIT_REF: master
    outputs:
      output: ${{ steps.step2.outputs.output }}
      status: ${{ steps.step2.outputs.status }}
    steps:
    - uses: actions/checkout@v4
    - name: pip install -r requirements.txt
      run: apt-get update && apt-get install -y python3-venv && python3 -m venv venv && . venv/bin/activate && pip install -r requirements.txt
    - name: python check_cache.py
      id: step1
      continue-on-error: true
      run: . venv/bin/activate && python caching/check.py -w '${{ github.workflow }}' -g ${{ secrets.REPO_SCOPED_PAT }} -r ${{ env.GIT_REF }} -o ${{ env.GIT_REPO }}
    - name: Save exit code to GITHUB_OUTPUT
      id: step2
      run: echo "output=${{ steps.step1.outcome }}" >> "$GITHUB_OUTPUT" && echo "status=$CACHE_PASS" >> "$GITHUB_OUTPUT"
  kick_tuxsuite_defconfigs:
    name: TuxSuite (defconfigs)
    runs-on: ubuntu-latest
    container: tuxsuite/tuxsuite
    needs:
    - check_cache
    - check_patches
    env:
      TUXSUITE_TOKEN: ${{ secrets.TUXSUITE_TOKEN }}
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    timeout-minutes: 480
    steps:
    - name: Checking Cache Pass
      if: ${{ needs.check_cache.outputs.output == 'success' && github.event_name != 'workflow_dispatch' && needs.check_cache.outputs.status == 'pass' }}
      run: echo 'Cache HIT on previously PASSED build. Passing this build to avoid redundant work.' && exit 0
    - name: Checking Cache Fail
      if: ${{ needs.check_cache.outputs.output == 'success' && github.event_name != 'workflow_dispatch' && needs.check_cache.outputs.status == 'fail' }}
      run: echo 'Cache HIT on previously FAILED build. Failing this build to avoid redundant work.' && exit 1
    - uses: actions/checkout@v4
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
    - name: tuxsuite
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
      run: tuxsuite plan --git-repo https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git --git-ref master --job-name defconfigs --json-out builds.json tuxsuite/next-clang-android.tux.yml || true
    - name: Update Cache Build Status
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
      run: python caching/update.py
    - name: save builds.json
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
      uses: actions/upload-artifact@v4
      with:
        path: builds.json
        name: output_artifact_defconfigs
        if-no-files-found: error
    - name: generate boot-utils.json
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
      run: python3 scripts/generate-boot-utils-json.py ${{ secrets.GITHUB_TOKEN }}
    - name: save boot-utils.json
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
      uses: actions/upload-artifact@v4
      with:
        path: boot-utils.json
        name: boot_utils_json_defconfigs
        if-no-files-found: error
  _33f756a58e3f44713fbcc5d419f54896:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=arm LLVM=1 LLVM_IAS=1 LLVM_VERSION=android multi_v5_defconfig
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm
      LLVM_VERSION: android
      BOOT: 1
      CONFIG: multi_v5_defconfig
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _3a8b38a1ee16a0b8441c7dda2a3d6573:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=arm LLVM=1 LLVM_IAS=1 LLVM_VERSION=android aspeed_g5_defconfig
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm
      LLVM_VERSION: android
      BOOT: 1
      CONFIG: aspeed_g5_defconfig
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _87ceb80e8738ca51446e7e1857d39b9c:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=arm LLVM=1 LLVM_IAS=1 LLVM_VERSION=android multi_v7_defconfig
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm
      LLVM_VERSION: android
      BOOT: 1
      CONFIG: multi_v7_defconfig
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _351114799740fe3119a3b2ce6956a6bb:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=arm LLVM=1 LLVM_IAS=1 LLVM_VERSION=android multi_v7_defconfig+CONFIG_THUMB2_KERNEL=y
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm
      LLVM_VERSION: android
      BOOT: 1
      CONFIG: multi_v7_defconfig+CONFIG_THUMB2_KERNEL=y
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _300e2471179b5487f89662afe7517d23:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=arm64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=android defconfig
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm64
      LLVM_VERSION: android
      BOOT: 1
      CONFIG: defconfig
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _66d5f7613f33d6225179b4f74b52c782:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=arm64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=android defconfig+CONFIG_CPU_BIG_ENDIAN=y
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm64
      LLVM_VERSION: android
      BOOT: 1
      CONFIG: defconfig+CONFIG_CPU_BIG_ENDIAN=y
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _012f9698c8641a28bfe42b1f88c3eeed:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=arm64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=android defconfig+CONFIG_LTO_CLANG_FULL=y
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm64
      LLVM_VERSION: android
      BOOT: 1
      CONFIG: defconfig+CONFIG_LTO_CLANG_FULL=y
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _f3ec5ce2d1407ab879240659d45e691f:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=arm64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=android defconfig+CONFIG_LTO_CLANG_THIN=y
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm64
      LLVM_VERSION: android
      BOOT: 1
      CONFIG: defconfig+CONFIG_LTO_CLANG_THIN=y
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _d40fba30474edc6e71babdc5032a19a1:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=i386 LLVM=1 LLVM_IAS=1 LLVM_VERSION=android defconfig
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: i386
      LLVM_VERSION: android
      BOOT: 1
      CONFIG: defconfig
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _3ad4a25550173087651ae615332210cb:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=x86_64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=android defconfig
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: x86_64
      LLVM_VERSION: android
      BOOT: 1
      CONFIG: defconfig
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _3a8042d5be17096e2036e17595de3dc2:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=x86_64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=android defconfig+CONFIG_LTO_CLANG_FULL=y
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: x86_64
      LLVM_VERSION: android
      BOOT: 1
      CONFIG: defconfig+CONFIG_LTO_CLANG_FULL=y
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _d405aef26ef8bf6ad44a5b678b109329:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=x86_64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=android defconfig+CONFIG_LTO_CLANG_THIN=y
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: x86_64
      LLVM_VERSION: android
      BOOT: 1
      CONFIG: defconfig+CONFIG_LTO_CLANG_THIN=y
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _b0ecbe2a369a0aaf6357ba0cbe25a175:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=x86_64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=android defconfig+CONFIG_GCOV_KERNEL=y+CONFIG_GCOV_PROFILE_ALL=y
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: x86_64
      LLVM_VERSION: android
      BOOT: 1
      CONFIG: defconfig+CONFIG_GCOV_KERNEL=y+CONFIG_GCOV_PROFILE_ALL=y
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  kick_tuxsuite_allconfigs:
    name: TuxSuite (allconfigs)
    runs-on: ubuntu-latest
    container: tuxsuite/tuxsuite
    needs:
    - check_cache
    - check_patches
    env:
      TUXSUITE_TOKEN: ${{ secrets.TUXSUITE_TOKEN }}
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    timeout-minutes: 480
    steps:
    - name: Checking Cache Pass
      if: ${{ needs.check_cache.outputs.output == 'success' && github.event_name != 'workflow_dispatch' && needs.check_cache.outputs.status == 'pass' }}
      run: echo 'Cache HIT on previously PASSED build. Passing this build to avoid redundant work.' && exit 0
    - name: Checking Cache Fail
      if: ${{ needs.check_cache.outputs.output == 'success' && github.event_name != 'workflow_dispatch' && needs.check_cache.outputs.status == 'fail' }}
      run: echo 'Cache HIT on previously FAILED build. Failing this build to avoid redundant work.' && exit 1
    - uses: actions/checkout@v4
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
    - name: tuxsuite
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
      run: tuxsuite plan --git-repo https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git --git-ref master --job-name allconfigs --json-out builds.json tuxsuite/next-clang-android.tux.yml || true
    - name: Update Cache Build Status
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
      run: python caching/update.py
    - name: save builds.json
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
      uses: actions/upload-artifact@v4
      with:
        path: builds.json
        name: output_artifact_allconfigs
        if-no-files-found: error
    - name: generate boot-utils.json
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
      run: python3 scripts/generate-boot-utils-json.py ${{ secrets.GITHUB_TOKEN }}
    - name: save boot-utils.json
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
      uses: actions/upload-artifact@v4
      with:
        path: boot-utils.json
        name: boot_utils_json_allconfigs
        if-no-files-found: error
  _05b4b5316e0115835ded8a6f9865a052:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_allconfigs
    - check_cache
    - check_patches
    name: ARCH=arm BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=android allmodconfig+CONFIG_WERROR=n+CONFIG_DRM_WERROR=n
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm
      LLVM_VERSION: android
      BOOT: 0
      CONFIG: allmodconfig+CONFIG_WERROR=n+CONFIG_DRM_WERROR=n
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_allconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_allconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _0bd45e7bf965a5baf08290e2f1592b0e:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_allconfigs
    - check_cache
    - check_patches
    name: ARCH=arm BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=android allnoconfig
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm
      LLVM_VERSION: android
      BOOT: 0
      CONFIG: allnoconfig
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_allconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_allconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _245638df4b978821d25a986e495eb7b3:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_allconfigs
    - check_cache
    - check_patches
    name: ARCH=arm BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=android allyesconfig+CONFIG_WERROR=n+CONFIG_DRM_WERROR=n
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm
      LLVM_VERSION: android
      BOOT: 0
      CONFIG: allyesconfig+CONFIG_WERROR=n+CONFIG_DRM_WERROR=n
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_allconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_allconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _0a2662d69f899d9d4f0fecc38bed6d41:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_allconfigs
    - check_cache
    - check_patches
    name: ARCH=arm64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=android allmodconfig
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm64
      LLVM_VERSION: android
      BOOT: 0
      CONFIG: allmodconfig
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_allconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_allconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _68285a8e5d56652bb35c7b8d8d93f32b:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_allconfigs
    - check_cache
    - check_patches
    name: ARCH=arm64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=android allmodconfig+CONFIG_GCOV_KERNEL=n+CONFIG_KASAN=n+CONFIG_LTO_CLANG_THIN=y+CONFIG_FORTIFY_KUNIT_TEST=n
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm64
      LLVM_VERSION: android
      BOOT: 0
      CONFIG: allmodconfig+CONFIG_GCOV_KERNEL=n+CONFIG_KASAN=n+CONFIG_LTO_CLANG_THIN=y+CONFIG_FORTIFY_KUNIT_TEST=n
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_allconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_allconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _b0fbaba94853b2f26c458cd0c3b95f2f:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_allconfigs
    - check_cache
    - check_patches
    name: ARCH=arm64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=android allnoconfig
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm64
      LLVM_VERSION: android
      BOOT: 0
      CONFIG: allnoconfig
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_allconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_allconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _e357ce8f7d2d716ba07663203d18eb52:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_allconfigs
    - check_cache
    - check_patches
    name: ARCH=arm64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=android allyesconfig
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm64
      LLVM_VERSION: android
      BOOT: 0
      CONFIG: allyesconfig
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_allconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_allconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _e38e51bfe42f6ce103710889aa946c01:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_allconfigs
    - check_cache
    - check_patches
    name: ARCH=x86_64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=android allmodconfig
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: x86_64
      LLVM_VERSION: android
      BOOT: 0
      CONFIG: allmodconfig
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_allconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_allconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _0d4d9387ac99034c79844d88b4067e05:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_allconfigs
    - check_cache
    - check_patches
    name: ARCH=x86_64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=android allmodconfig+CONFIG_GCOV_KERNEL=n+CONFIG_KASAN=n+CONFIG_LTO_CLANG_THIN=y+CONFIG_FORTIFY_KUNIT_TEST=n
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: x86_64
      LLVM_VERSION: android
      BOOT: 0
      CONFIG: allmodconfig+CONFIG_GCOV_KERNEL=n+CONFIG_KASAN=n+CONFIG_LTO_CLANG_THIN=y+CONFIG_FORTIFY_KUNIT_TEST=n
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_allconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_allconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _00318ac7d697c430359de1e4e903d7eb:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_allconfigs
    - check_cache
    - check_patches
    name: ARCH=x86_64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=android allnoconfig
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: x86_64
      LLVM_VERSION: android
      BOOT: 0
      CONFIG: allnoconfig
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_allconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_allconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _19dd04f50424074ba37661160bf0204c:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_allconfigs
    - check_cache
    - check_patches
    name: ARCH=x86_64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=android allyesconfig
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: x86_64
      LLVM_VERSION: android
      BOOT: 0
      CONFIG: allyesconfig
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_allconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_allconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py

