# DO NOT MODIFY MANUALLY!
# This file has been autogenerated by invoking:
# $ ./generate_workflow.py < generator.yml tip > .github/workflows/tip.yml
name: tip
'on':
  push:
    branches:
    - main
    - presubmit/*
    paths:
    - check_logs.py
    - utils.py
    - tuxsuite/tip.tux.yml
    - .github/workflows/tip.yml
  schedule:
  - cron: 0 0 * * *
  workflow_dispatch: null
jobs:
  kick_tuxsuite_defconfigs:
    name: TuxSuite (defconfigs)
    runs-on: ubuntu-20.04
    container: tuxsuite/tuxsuite
    env:
      TUXSUITE_TOKEN: ${{ secrets.TUXSUITE_TOKEN }}
    steps:
    - uses: actions/checkout@v2
    - name: tuxsuite
      run: tuxsuite build-set --set-name defconfigs --json-out builds.json --tux-config tuxsuite/tip.tux.yml --patch-series patches/tip || true
    - name: save output
      uses: actions/upload-artifact@v2
      with:
        path: builds.json
        name: output_artifact_defconfigs
        if-no-files-found: error
  _6b9b48c5ca690a81c94f317d6baf1765:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=i386 LLVM=1 LLVM_IAS=1 LLVM_VERSION=14 defconfig
    env:
      ARCH: i386
      LLVM_VERSION: 14
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _f83a8a60320f3abf313f8a5759c5391c:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=x86_64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=14 defconfig
    env:
      ARCH: x86_64
      LLVM_VERSION: 14
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _7dde147b804e95998e110f5dfe487e8f:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=i386 LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 defconfig
    env:
      ARCH: i386
      LLVM_VERSION: 13
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _5725232ce5f790d6db053c3d226eead6:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=x86_64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 defconfig
    env:
      ARCH: x86_64
      LLVM_VERSION: 13
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _300d5ea669ce6bad5b1433d2643b416d:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=i386 LLVM=1 LLVM_IAS=1 LLVM_VERSION=12 defconfig
    env:
      ARCH: i386
      LLVM_VERSION: 12
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _d49633cca166398690b1f3ecad135a14:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=x86_64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=12 defconfig
    env:
      ARCH: x86_64
      LLVM_VERSION: 12
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _6b25347145c5e89e498ca11233af4912:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=i386 LLVM=1 LLVM_IAS=1 LLVM_VERSION=11 defconfig
    env:
      ARCH: i386
      LLVM_VERSION: 11
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _73f8d728902a8cc9c807d77d1aaaedaf:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_defconfigs
    name: ARCH=x86_64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=11 defconfig
    env:
      ARCH: x86_64
      LLVM_VERSION: 11
      INSTALL_DEPS: 1
      BOOT: 1
      CONFIG: defconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_defconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  kick_tuxsuite_allconfigs:
    name: TuxSuite (allconfigs)
    runs-on: ubuntu-20.04
    container: tuxsuite/tuxsuite
    env:
      TUXSUITE_TOKEN: ${{ secrets.TUXSUITE_TOKEN }}
    steps:
    - uses: actions/checkout@v2
    - name: tuxsuite
      run: tuxsuite build-set --set-name allconfigs --json-out builds.json --tux-config tuxsuite/tip.tux.yml --patch-series patches/tip || true
    - name: save output
      uses: actions/upload-artifact@v2
      with:
        path: builds.json
        name: output_artifact_allconfigs
        if-no-files-found: error
  _992af5860bcc9a1c28b228d2673cfcde:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=x86_64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=14 allmodconfig+CONFIG_WERROR=n
    env:
      ARCH: x86_64
      LLVM_VERSION: 14
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allmodconfig+CONFIG_WERROR=n
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _8d8410b3d3cd0717d60c680bff498577:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=x86_64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=14 allnoconfig
    env:
      ARCH: x86_64
      LLVM_VERSION: 14
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allnoconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _d1f6821de38423146e72153d995ad97f:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=x86_64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=14 allyesconfig+CONFIG_WERROR=n
    env:
      ARCH: x86_64
      LLVM_VERSION: 14
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allyesconfig+CONFIG_WERROR=n
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _3d883b6dd7ce3b5941eac52b8e5d255a:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=x86_64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 allmodconfig+CONFIG_WERROR=n
    env:
      ARCH: x86_64
      LLVM_VERSION: 13
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allmodconfig+CONFIG_WERROR=n
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _10bc1944d6f5f29611271ddc67d9e2bd:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=x86_64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 allnoconfig
    env:
      ARCH: x86_64
      LLVM_VERSION: 13
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allnoconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _24a02828373c02a9d349a03fab7edbb8:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=x86_64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=13 allyesconfig+CONFIG_WERROR=n
    env:
      ARCH: x86_64
      LLVM_VERSION: 13
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allyesconfig+CONFIG_WERROR=n
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _fa482dc7e25eed59da05016a93e8278c:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=x86_64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=12 allmodconfig+CONFIG_WERROR=n
    env:
      ARCH: x86_64
      LLVM_VERSION: 12
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allmodconfig+CONFIG_WERROR=n
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _78a1c189b48cf1440cdce261b5ec5efe:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=x86_64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=12 allnoconfig
    env:
      ARCH: x86_64
      LLVM_VERSION: 12
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allnoconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _34a42eb37f34ff66ca3fcb80b692fc4d:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=x86_64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=12 allyesconfig+CONFIG_WERROR=n
    env:
      ARCH: x86_64
      LLVM_VERSION: 12
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allyesconfig+CONFIG_WERROR=n
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _0d027f6d4a4d947cffb7496e1c16a135:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=x86_64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=11 allmodconfig+CONFIG_WERROR=n
    env:
      ARCH: x86_64
      LLVM_VERSION: 11
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allmodconfig+CONFIG_WERROR=n
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _d5032c6b0134fa08249732baa271b04a:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=x86_64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=11 allnoconfig
    env:
      ARCH: x86_64
      LLVM_VERSION: 11
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allnoconfig
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py
  _7325bb746df1b067e4e5f94ea088cb6d:
    runs-on: ubuntu-20.04
    needs: kick_tuxsuite_allconfigs
    name: ARCH=x86_64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=11 allyesconfig+CONFIG_WERROR=n
    env:
      ARCH: x86_64
      LLVM_VERSION: 11
      INSTALL_DEPS: 1
      BOOT: 0
      CONFIG: allyesconfig+CONFIG_WERROR=n
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/download-artifact@v2
      with:
        name: output_artifact_allconfigs
    - name: Register clang error/warning problem matcher
      run: echo "::add-matcher::.github/problem-matchers/clang-errors-warnings.json"
    - name: Boot Test
      run: ./check_logs.py

