# DO NOT MODIFY MANUALLY!
# This file has been autogenerated by invoking:
# $ ./generate_workflow.py 5.4
name: 5.4 (clang-15)
'on':
  push:
    branches:
    - presubmit/*
    paths:
    - check_logs.py
    - utils.py
    - tuxsuite/5.4-clang-15.tux.yml
    - .github/workflows/5.4-clang-15.yml
  schedule:
  - cron: 0 0 * * 3
  workflow_dispatch: null
permissions: read-all
jobs:
  check_cache:
    name: Check Cache
    runs-on: ubuntu-latest
    container: tuxmake/x86_64_clang-15
    env:
      GIT_REPO: https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git
      GIT_REF: linux-5.4.y
    outputs:
      output: ${{ steps.step2.outputs.output }}
      status: ${{ steps.step2.outputs.status }}
    steps:
    - uses: actions/checkout@v4
    - name: pip install requests
      run: apt-get install -y python3-pip && pip install requests
    - name: python check_cache.py
      id: step1
      continue-on-error: true
      run: python check_cache.py -w '${{github.workflow}}' -g ${{secrets.REPO_SCOPED_PAT}} -r ${{env.GIT_REF}} -o ${{env.GIT_REPO}}
    - name: Save exit code to GITHUB_OUTPUT
      id: step2
      run: echo "output=${{steps.step1.outcome}}" >> "$GITHUB_OUTPUT" && echo "status=$CACHE_PASS" >> "$GITHUB_OUTPUT"
  kick_tuxsuite_defconfigs:
    name: TuxSuite (defconfigs)
    runs-on: ubuntu-latest
    container: tuxsuite/tuxsuite
    needs: check_cache
    env:
      TUXSUITE_TOKEN: ${{ secrets.TUXSUITE_TOKEN }}
    timeout-minutes: 480
    steps:
    - name: Checking Cache Pass
      if: ${{ needs.check_cache.outputs.output == 'success' && github.event_name != 'workflow_dispatch' && needs.check_cache.outputs.status == 'pass'}}
      run: echo 'Cache HIT on previously PASSED build. Passing this build to avoid redundant work.' && exit 0
    - name: Checking Cache Fail
      if: ${{ needs.check_cache.outputs.output == 'success' && github.event_name != 'workflow_dispatch' && needs.check_cache.outputs.status == 'fail'}}
      run: echo 'Cache HIT on previously FAILED build. Failing this build to avoid redundant work.' && exit 1
    - uses: actions/checkout@v4
    - name: tuxsuite
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch'}}
      run: tuxsuite plan --git-repo https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git --git-ref linux-5.4.y --job-name defconfigs --json-out builds.json tuxsuite/5.4-clang-15.tux.yml || true
    - name: save builds.json
      uses: actions/upload-artifact@v3
      with:
        path: builds.json
        name: output_artifact_defconfigs
        if-no-files-found: error
    - name: generate boot-utils.json
      run: python3 scripts/generate-boot-utils-json.py ${{ secrets.GITHUB_TOKEN }}
    - name: save boot-utils.json
      uses: actions/upload-artifact@v3
      with:
        path: boot-utils.json
        name: boot_utils_json_defconfigs
        if-no-files-found: error
  _05f17d11482533ebf3467c477fb42626:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    name: ARCH=arm LLVM=1 LLVM_IAS=0 LLVM_VERSION=15 multi_v7_defconfig
    if: ${{needs.check_cache.outputs.status != 'pass'}}
    env:
      ARCH: arm
      LLVM_VERSION: 15
      BOOT: 1
      CONFIG: multi_v7_defconfig
      REPO_SCOPED_PAT: ${{secrets.REPO_SCOPED_PAT}}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v3
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v3
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: ./check_logs.py
  _666c000194bc3cdd0e08876443332315:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    name: ARCH=arm LLVM=1 LLVM_IAS=0 LLVM_VERSION=15 multi_v7_defconfig+CONFIG_THUMB2_KERNEL=y
    if: ${{needs.check_cache.outputs.status != 'pass'}}
    env:
      ARCH: arm
      LLVM_VERSION: 15
      BOOT: 1
      CONFIG: multi_v7_defconfig+CONFIG_THUMB2_KERNEL=y
      REPO_SCOPED_PAT: ${{secrets.REPO_SCOPED_PAT}}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v3
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v3
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: ./check_logs.py
  _18c0542ef2701b962599f5d36e9718ba:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    name: ARCH=arm64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=15 defconfig+CONFIG_COMPAT_VDSO=n
    if: ${{needs.check_cache.outputs.status != 'pass'}}
    env:
      ARCH: arm64
      LLVM_VERSION: 15
      BOOT: 1
      CONFIG: defconfig+CONFIG_COMPAT_VDSO=n
      REPO_SCOPED_PAT: ${{secrets.REPO_SCOPED_PAT}}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v3
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v3
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: ./check_logs.py
  _e1084951b99347c2cf3f483a2bc53b61:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    name: ARCH=arm64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=15 defconfig+CONFIG_CPU_BIG_ENDIAN=y
    if: ${{needs.check_cache.outputs.status != 'pass'}}
    env:
      ARCH: arm64
      LLVM_VERSION: 15
      BOOT: 1
      CONFIG: defconfig+CONFIG_CPU_BIG_ENDIAN=y
      REPO_SCOPED_PAT: ${{secrets.REPO_SCOPED_PAT}}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v3
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v3
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: ./check_logs.py
  _fbcd0f7c0945b3672fd4bf8fb18cd9f5:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    name: ARCH=mips LLVM=1 LLVM_IAS=0 LLVM_VERSION=15 malta_defconfig+CONFIG_BLK_DEV_INITRD=y+CONFIG_CPU_BIG_ENDIAN=y
    if: ${{needs.check_cache.outputs.status != 'pass'}}
    env:
      ARCH: mips
      LLVM_VERSION: 15
      BOOT: 1
      CONFIG: malta_defconfig+CONFIG_BLK_DEV_INITRD=y+CONFIG_CPU_BIG_ENDIAN=y
      REPO_SCOPED_PAT: ${{secrets.REPO_SCOPED_PAT}}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v3
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v3
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: ./check_logs.py
  _ab37ef32e41b6e740043c4ede25ff780:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    name: ARCH=mips LLVM=1 LLVM_IAS=0 LLVM_VERSION=15 malta_defconfig+CONFIG_BLK_DEV_INITRD=y
    if: ${{needs.check_cache.outputs.status != 'pass'}}
    env:
      ARCH: mips
      LLVM_VERSION: 15
      BOOT: 1
      CONFIG: malta_defconfig+CONFIG_BLK_DEV_INITRD=y
      REPO_SCOPED_PAT: ${{secrets.REPO_SCOPED_PAT}}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v3
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v3
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: ./check_logs.py
  _73089fb85e10cf8cd08daf2f08ef949c:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    name: ARCH=powerpc LLVM=1 LLVM_IAS=0 LLVM_VERSION=15 ppc44x_defconfig
    if: ${{needs.check_cache.outputs.status != 'pass'}}
    env:
      ARCH: powerpc
      LLVM_VERSION: 15
      BOOT: 1
      CONFIG: ppc44x_defconfig
      REPO_SCOPED_PAT: ${{secrets.REPO_SCOPED_PAT}}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v3
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v3
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: ./check_logs.py
  _6afb266ee9fdf9147dad082968e9acd5:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    name: ARCH=powerpc LLVM=1 LD=powerpc64le-linux-gnu-ld LLVM_IAS=0 LLVM_VERSION=15 ppc64_guest_defconfig
    if: ${{needs.check_cache.outputs.status != 'pass'}}
    env:
      ARCH: powerpc
      LLVM_VERSION: 15
      BOOT: 1
      CONFIG: ppc64_guest_defconfig
      REPO_SCOPED_PAT: ${{secrets.REPO_SCOPED_PAT}}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v3
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v3
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: ./check_logs.py
  _b83e803d7dd6c3201bea198a418a70ce:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    name: ARCH=powerpc LLVM=1 LLVM_IAS=0 LLVM_VERSION=15 powernv_defconfig
    if: ${{needs.check_cache.outputs.status != 'pass'}}
    env:
      ARCH: powerpc
      LLVM_VERSION: 15
      BOOT: 1
      CONFIG: powernv_defconfig
      REPO_SCOPED_PAT: ${{secrets.REPO_SCOPED_PAT}}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v3
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v3
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: ./check_logs.py
  _6a10973686962e1686b87d8f19b7ec54:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    name: ARCH=x86_64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=15 defconfig
    if: ${{needs.check_cache.outputs.status != 'pass'}}
    env:
      ARCH: x86_64
      LLVM_VERSION: 15
      BOOT: 1
      CONFIG: defconfig
      REPO_SCOPED_PAT: ${{secrets.REPO_SCOPED_PAT}}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v3
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v3
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: ./check_logs.py
  kick_tuxsuite_allconfigs:
    name: TuxSuite (allconfigs)
    runs-on: ubuntu-latest
    container: tuxsuite/tuxsuite
    needs: check_cache
    env:
      TUXSUITE_TOKEN: ${{ secrets.TUXSUITE_TOKEN }}
    timeout-minutes: 480
    steps:
    - name: Checking Cache Pass
      if: ${{ needs.check_cache.outputs.output == 'success' && github.event_name != 'workflow_dispatch' && needs.check_cache.outputs.status == 'pass'}}
      run: echo 'Cache HIT on previously PASSED build. Passing this build to avoid redundant work.' && exit 0
    - name: Checking Cache Fail
      if: ${{ needs.check_cache.outputs.output == 'success' && github.event_name != 'workflow_dispatch' && needs.check_cache.outputs.status == 'fail'}}
      run: echo 'Cache HIT on previously FAILED build. Failing this build to avoid redundant work.' && exit 1
    - uses: actions/checkout@v4
    - name: tuxsuite
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch'}}
      run: tuxsuite plan --git-repo https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git --git-ref linux-5.4.y --job-name allconfigs --json-out builds.json tuxsuite/5.4-clang-15.tux.yml || true
    - name: save builds.json
      uses: actions/upload-artifact@v3
      with:
        path: builds.json
        name: output_artifact_allconfigs
        if-no-files-found: error
    - name: generate boot-utils.json
      run: python3 scripts/generate-boot-utils-json.py ${{ secrets.GITHUB_TOKEN }}
    - name: save boot-utils.json
      uses: actions/upload-artifact@v3
      with:
        path: boot-utils.json
        name: boot_utils_json_allconfigs
        if-no-files-found: error
  _fa860e93e45cbc4100d2fba75f35b51d:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_allconfigs
    - check_cache
    name: ARCH=x86_64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=15 allmodconfig
    if: ${{needs.check_cache.outputs.status != 'pass'}}
    env:
      ARCH: x86_64
      LLVM_VERSION: 15
      BOOT: 0
      CONFIG: allmodconfig
      REPO_SCOPED_PAT: ${{secrets.REPO_SCOPED_PAT}}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v3
      with:
        name: output_artifact_allconfigs
    - uses: actions/download-artifact@v3
      with:
        name: boot_utils_json_allconfigs
    - name: Check Build and Boot Logs
      run: ./check_logs.py

