# DO NOT MODIFY MANUALLY!
# This file has been autogenerated by invoking:
# $ ./generate_workflow.py chromeos-6.6
name: chromeos-6.6 (clang-14)
'on':
  push:
    branches:
    - presubmit/*
    paths:
    - check_logs.py
    - utils.py
    - tuxsuite/chromeos-6.6-clang-14.tux.yml
    - .github/workflows/chromeos-6.6-clang-14.yml
  schedule:
  - cron: 0 12 * * 0
  workflow_dispatch: null
permissions: read-all
jobs:
  check_cache:
    name: Check Cache
    runs-on: ubuntu-latest
    container: tuxmake/x86_64_clang-14
    env:
      GIT_REPO: https://chromium.googlesource.com/chromiumos/third_party/kernel.git
      GIT_REF: chromeos-6.6
    outputs:
      output: ${{ steps.step2.outputs.output }}
      status: ${{ steps.step2.outputs.status }}
    steps:
    - uses: actions/checkout@v4
    - name: pip install -r requirements.txt
      run: apt-get install -y python3-pip && pip install -r requirements.txt
    - name: python check_cache.py
      id: step1
      continue-on-error: true
      run: python caching/check.py -w '${{ github.workflow }}' -g ${{ secrets.REPO_SCOPED_PAT }} -r ${{ env.GIT_REF }} -o ${{ env.GIT_REPO }}
    - name: Save exit code to GITHUB_OUTPUT
      id: step2
      run: echo "output=${{ steps.step1.outcome }}" >> "$GITHUB_OUTPUT" && echo "status=$CACHE_PASS" >> "$GITHUB_OUTPUT"
  kick_tuxsuite_defconfigs:
    name: TuxSuite (defconfigs)
    runs-on: ubuntu-latest
    container: tuxsuite/tuxsuite
    needs: check_cache
    env:
      TUXSUITE_TOKEN: ${{ secrets.TUXSUITE_TOKEN }}
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    timeout-minutes: 480
    steps:
    - name: Checking Cache Pass
      if: ${{ needs.check_cache.outputs.output == 'success' && github.event_name != 'workflow_dispatch' && needs.check_cache.outputs.status == 'pass' }}
      run: echo 'Cache HIT on previously PASSED build. Passing this build to avoid redundant work.' && exit 0
    - name: Checking Cache Fail
      if: ${{ needs.check_cache.outputs.output == 'success' && github.event_name != 'workflow_dispatch' && needs.check_cache.outputs.status == 'fail' }}
      run: echo 'Cache HIT on previously FAILED build. Failing this build to avoid redundant work.' && exit 1
    - uses: actions/checkout@v4
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
    - name: tuxsuite
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
      run: tuxsuite plan --git-repo https://chromium.googlesource.com/chromiumos/third_party/kernel.git --git-ref chromeos-6.6 --job-name defconfigs --json-out builds.json tuxsuite/chromeos-6.6-clang-14.tux.yml || true
    - name: Update Cache Build Status
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
      run: python caching/update.py
    - name: save builds.json
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
      uses: actions/upload-artifact@v3
      with:
        path: builds.json
        name: output_artifact_defconfigs
        if-no-files-found: error
    - name: generate boot-utils.json
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
      run: python3 scripts/generate-boot-utils-json.py ${{ secrets.GITHUB_TOKEN }}
    - name: save boot-utils.json
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
      uses: actions/upload-artifact@v3
      with:
        path: boot-utils.json
        name: boot_utils_json_defconfigs
        if-no-files-found: error
  _30b158c8f6c703686e9d753bcdaaef03:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    name: ARCH=arm64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=14 chromeos/config/chromeos/base.config+chromeos/config/chromeos/arm64/common.config+chromeos/config/chromeos/arm64/chromiumos-arm64-generic.flavour.config+CONFIG_SECURITY_CHROMIUMOS=n
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm64
      LLVM_VERSION: 14
      BOOT: 1
      CONFIG: chromeos/config/chromeos/base.config+chromeos/config/chromeos/arm64/common.config+chromeos/config/chromeos/arm64/chromiumos-arm64-generic.flavour.config+CONFIG_SECURITY_CHROMIUMOS=n
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v3
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v3
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _ae5adf681ecc89bfa13b621c928ee048:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    name: ARCH=x86_64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=14 chromeos/config/chromeos/base.config+chromeos/config/chromeos/x86_64/common.config+chromeos/config/chromeos/x86_64/chromiumos-x86_64-generic.flavour.config+CONFIG_SECURITY_CHROMIUMOS=n
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: x86_64
      LLVM_VERSION: 14
      BOOT: 1
      CONFIG: chromeos/config/chromeos/base.config+chromeos/config/chromeos/x86_64/common.config+chromeos/config/chromeos/x86_64/chromiumos-x86_64-generic.flavour.config+CONFIG_SECURITY_CHROMIUMOS=n
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v3
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v3
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py

