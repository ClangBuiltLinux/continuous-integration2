# DO NOT MODIFY MANUALLY!
# This file has been autogenerated by invoking:
# $ ./generate_workflow.py 5.10
name: 5.10 (clang-20)
'on':
  push:
    branches:
    - presubmit/*
    paths:
    - check_logs.py
    - utils.py
    - tuxsuite/5.10-clang-20.tux.yml
    - .github/workflows/5.10-clang-20.yml
  schedule:
  - cron: 0 12 * * 1,5
  workflow_dispatch: null
permissions: read-all
jobs:
  check_patches:
    name: Check that patches are applicable
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: check-patches-apply.py
      run: python3 scripts/check-patches-apply.py --patches-dir patches/5.10 --repo https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git --ref linux-5.10.y
  check_cache:
    name: Check Cache
    runs-on: ubuntu-latest
    container: tuxmake/x86_64_korg-clang-20
    needs: check_patches
    env:
      GIT_REPO: https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git
      GIT_REF: linux-5.10.y
    outputs:
      output: ${{ steps.step2.outputs.output }}
      status: ${{ steps.step2.outputs.status }}
    steps:
    - uses: actions/checkout@v4
    - name: pip install -r requirements.txt
      run: apt-get update && apt-get install -y python3-venv && python3 -m venv venv && . venv/bin/activate && pip install -r requirements.txt
    - name: python check_cache.py
      id: step1
      continue-on-error: true
      run: . venv/bin/activate && python caching/check.py -w '${{ github.workflow }}' -g ${{ secrets.REPO_SCOPED_PAT }} -r ${{ env.GIT_REF }} -o ${{ env.GIT_REPO }}
    - name: Save exit code to GITHUB_OUTPUT
      id: step2
      run: echo "output=${{ steps.step1.outcome }}" >> "$GITHUB_OUTPUT" && echo "status=$CACHE_PASS" >> "$GITHUB_OUTPUT"
  kick_tuxsuite_defconfigs:
    name: TuxSuite (defconfigs)
    runs-on: ubuntu-latest
    container: tuxsuite/tuxsuite
    needs:
    - check_cache
    - check_patches
    env:
      TUXSUITE_TOKEN: ${{ secrets.TUXSUITE_TOKEN }}
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    timeout-minutes: 480
    steps:
    - name: Checking Cache Pass
      if: ${{ needs.check_cache.outputs.output == 'success' && github.event_name != 'workflow_dispatch' && needs.check_cache.outputs.status == 'pass' }}
      run: echo 'Cache HIT on previously PASSED build. Passing this build to avoid redundant work.' && exit 0
    - name: Checking Cache Fail
      if: ${{ needs.check_cache.outputs.output == 'success' && github.event_name != 'workflow_dispatch' && needs.check_cache.outputs.status == 'fail' }}
      run: echo 'Cache HIT on previously FAILED build. Failing this build to avoid redundant work.' && exit 1
    - uses: actions/checkout@v4
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
    - name: tuxsuite
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
      run: tuxsuite plan --git-repo https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git --git-ref linux-5.10.y --job-name defconfigs --json-out builds.json --patch-series patches/5.10 tuxsuite/5.10-clang-20.tux.yml || true
    - name: Update Cache Build Status
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
      run: python caching/update.py
    - name: save builds.json
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
      uses: actions/upload-artifact@v4
      with:
        path: builds.json
        name: output_artifact_defconfigs
        if-no-files-found: error
    - name: generate boot-utils.json
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
      run: python3 scripts/generate-boot-utils-json.py ${{ secrets.GITHUB_TOKEN }}
    - name: save boot-utils.json
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
      uses: actions/upload-artifact@v4
      with:
        path: boot-utils.json
        name: boot_utils_json_defconfigs
        if-no-files-found: error
  _5c3f6381ee61d88be9d8b5213def247b:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=arm LLVM=1 LLVM_IAS=0 LLVM_VERSION=20 multi_v5_defconfig
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm
      LLVM_VERSION: 20
      BOOT: 1
      CONFIG: multi_v5_defconfig
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _85e57855ec2f6de31037ac80179233c7:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=arm LLVM=1 LLVM_IAS=0 LLVM_VERSION=20 aspeed_g5_defconfig
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm
      LLVM_VERSION: 20
      BOOT: 1
      CONFIG: aspeed_g5_defconfig
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _c2bf94de9f2bde60bba64513f64dabc2:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=arm LLVM=1 LLVM_IAS=0 LLVM_VERSION=20 multi_v7_defconfig
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm
      LLVM_VERSION: 20
      BOOT: 1
      CONFIG: multi_v7_defconfig
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _0549b8fe4511647938074ceec7e8b823:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=arm LLVM=1 LLVM_IAS=0 LLVM_VERSION=20 multi_v7_defconfig+CONFIG_THUMB2_KERNEL=y
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm
      LLVM_VERSION: 20
      BOOT: 1
      CONFIG: multi_v7_defconfig+CONFIG_THUMB2_KERNEL=y
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _fe4376c6d0f6d0b2ca7b59fe73bb18b9:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=arm64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=20 defconfig
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm64
      LLVM_VERSION: 20
      BOOT: 1
      CONFIG: defconfig
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _4290984f97d94d1a4349c91c232e625a:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=arm64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=20 defconfig+CONFIG_CPU_BIG_ENDIAN=y
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm64
      LLVM_VERSION: 20
      BOOT: 1
      CONFIG: defconfig+CONFIG_CPU_BIG_ENDIAN=y
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _1e07c2ffd33dbc8046600a5573bf06f2:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=i386 LLVM=1 LLVM_IAS=1 LLVM_VERSION=20 defconfig
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: i386
      LLVM_VERSION: 20
      BOOT: 1
      CONFIG: defconfig
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _edc2d0e3b47cf718dd09624263c7b18c:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=mips LLVM=1 LLVM_IAS=0 LLVM_VERSION=20 malta_defconfig+CONFIG_BLK_DEV_INITRD=y+CONFIG_CPU_BIG_ENDIAN=y
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: mips
      LLVM_VERSION: 20
      BOOT: 1
      CONFIG: malta_defconfig+CONFIG_BLK_DEV_INITRD=y+CONFIG_CPU_BIG_ENDIAN=y
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _9f3ebca98379a12f1f8cb9741633219a:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=mips LLVM=1 LLVM_IAS=0 LLVM_VERSION=20 malta_defconfig+CONFIG_BLK_DEV_INITRD=y
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: mips
      LLVM_VERSION: 20
      BOOT: 1
      CONFIG: malta_defconfig+CONFIG_BLK_DEV_INITRD=y
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _d0ff96d61144548f6592cf6673272852:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=powerpc LLVM=1 LLVM_IAS=0 LLVM_VERSION=20 ppc44x_defconfig
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: powerpc
      LLVM_VERSION: 20
      BOOT: 1
      CONFIG: ppc44x_defconfig
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _0d9583e254df222153eb05c5a0cde7ab:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=powerpc LLVM=1 LD=powerpc64le-linux-gnu-ld LLVM_IAS=0 LLVM_VERSION=20 ppc64_guest_defconfig
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: powerpc
      LLVM_VERSION: 20
      BOOT: 1
      CONFIG: ppc64_guest_defconfig
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _6e7d122cdad9ad7179636a77d826e974:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=powerpc LLVM=1 LLVM_IAS=0 LLVM_VERSION=20 powernv_defconfig
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: powerpc
      LLVM_VERSION: 20
      BOOT: 1
      CONFIG: powernv_defconfig
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _b2a89546e7636a329023bcb860b39154:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=riscv LLVM=1 LD=riscv64-linux-gnu-ld LLVM_IAS=1 LLVM_VERSION=20 defconfig
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: riscv
      LLVM_VERSION: 20
      BOOT: 1
      CONFIG: defconfig
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _04ffaa3d2ea5f613f8b1ce4c82d48a17:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=s390 CC=clang LLVM_IAS=0 LLVM_VERSION=20 defconfig
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: s390
      LLVM_VERSION: 20
      BOOT: 1
      CONFIG: defconfig
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _01f6015313e3baa22a9412dc99683b77:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_defconfigs
    - check_cache
    - check_patches
    name: ARCH=x86_64 LLVM=1 LLVM_IAS=1 LLVM_VERSION=20 defconfig
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: x86_64
      LLVM_VERSION: 20
      BOOT: 1
      CONFIG: defconfig
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_defconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_defconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  kick_tuxsuite_allconfigs:
    name: TuxSuite (allconfigs)
    runs-on: ubuntu-latest
    container: tuxsuite/tuxsuite
    needs:
    - check_cache
    - check_patches
    env:
      TUXSUITE_TOKEN: ${{ secrets.TUXSUITE_TOKEN }}
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    timeout-minutes: 480
    steps:
    - name: Checking Cache Pass
      if: ${{ needs.check_cache.outputs.output == 'success' && github.event_name != 'workflow_dispatch' && needs.check_cache.outputs.status == 'pass' }}
      run: echo 'Cache HIT on previously PASSED build. Passing this build to avoid redundant work.' && exit 0
    - name: Checking Cache Fail
      if: ${{ needs.check_cache.outputs.output == 'success' && github.event_name != 'workflow_dispatch' && needs.check_cache.outputs.status == 'fail' }}
      run: echo 'Cache HIT on previously FAILED build. Failing this build to avoid redundant work.' && exit 1
    - uses: actions/checkout@v4
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
    - name: tuxsuite
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
      run: tuxsuite plan --git-repo https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux.git --git-ref linux-5.10.y --job-name allconfigs --json-out builds.json --patch-series patches/5.10 tuxsuite/5.10-clang-20.tux.yml || true
    - name: Update Cache Build Status
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
      run: python caching/update.py
    - name: save builds.json
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
      uses: actions/upload-artifact@v4
      with:
        path: builds.json
        name: output_artifact_allconfigs
        if-no-files-found: error
    - name: generate boot-utils.json
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
      run: python3 scripts/generate-boot-utils-json.py ${{ secrets.GITHUB_TOKEN }}
    - name: save boot-utils.json
      if: ${{ needs.check_cache.outputs.output == 'failure' || github.event_name == 'workflow_dispatch' }}
      uses: actions/upload-artifact@v4
      with:
        path: boot-utils.json
        name: boot_utils_json_allconfigs
        if-no-files-found: error
  _98882547b79ac48d251add5db68b3c3d:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_allconfigs
    - check_cache
    - check_patches
    name: ARCH=arm BOOT=0 LLVM=1 LLVM_IAS=0 LLVM_VERSION=20 allmodconfig+CONFIG_WERROR=n+CONFIG_DRM_WERROR=n
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm
      LLVM_VERSION: 20
      BOOT: 0
      CONFIG: allmodconfig+CONFIG_WERROR=n+CONFIG_DRM_WERROR=n
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_allconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_allconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _5d96ecf5c52367f8c08d2182dcb876bf:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_allconfigs
    - check_cache
    - check_patches
    name: ARCH=arm BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=20 allnoconfig
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm
      LLVM_VERSION: 20
      BOOT: 0
      CONFIG: allnoconfig
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_allconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_allconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _a5cb92a3eb762477d5b9401400e26008:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_allconfigs
    - check_cache
    - check_patches
    name: ARCH=arm BOOT=0 LLVM=1 LLVM_IAS=0 LLVM_VERSION=20 allyesconfig+CONFIG_WERROR=n+CONFIG_DRM_WERROR=n
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm
      LLVM_VERSION: 20
      BOOT: 0
      CONFIG: allyesconfig+CONFIG_WERROR=n+CONFIG_DRM_WERROR=n
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_allconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_allconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _a45e44f3289f4e271ae2edc0e4140fb8:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_allconfigs
    - check_cache
    - check_patches
    name: ARCH=arm64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=20 allmodconfig
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm64
      LLVM_VERSION: 20
      BOOT: 0
      CONFIG: allmodconfig
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_allconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_allconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _5711ac05161bb513e942cef9f3895a1e:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_allconfigs
    - check_cache
    - check_patches
    name: ARCH=arm64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=20 allnoconfig
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm64
      LLVM_VERSION: 20
      BOOT: 0
      CONFIG: allnoconfig
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_allconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_allconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _d22442f1dd65aaba9fa4429b5e972674:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_allconfigs
    - check_cache
    - check_patches
    name: ARCH=arm64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=20 allyesconfig
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: arm64
      LLVM_VERSION: 20
      BOOT: 0
      CONFIG: allyesconfig
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_allconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_allconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _0f5751014af8ec10a2e9168a2f47f79e:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_allconfigs
    - check_cache
    - check_patches
    name: ARCH=x86_64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=20 allmodconfig
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: x86_64
      LLVM_VERSION: 20
      BOOT: 0
      CONFIG: allmodconfig
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_allconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_allconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _5ba58f7e24f31585c9ca792091068041:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_allconfigs
    - check_cache
    - check_patches
    name: ARCH=x86_64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=20 allnoconfig
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: x86_64
      LLVM_VERSION: 20
      BOOT: 0
      CONFIG: allnoconfig
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_allconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_allconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py
  _19df301b74b0b50890a226c8930000b6:
    runs-on: ubuntu-latest
    needs:
    - kick_tuxsuite_allconfigs
    - check_cache
    - check_patches
    name: ARCH=x86_64 BOOT=0 LLVM=1 LLVM_IAS=1 LLVM_VERSION=20 allyesconfig
    if: ${{ needs.check_cache.outputs.status != 'pass' }}
    env:
      ARCH: x86_64
      LLVM_VERSION: 20
      BOOT: 0
      CONFIG: allyesconfig
      REPO_SCOPED_PAT: ${{ secrets.REPO_SCOPED_PAT }}
    container:
      image: ghcr.io/clangbuiltlinux/qemu
      options: --ipc=host
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: actions/download-artifact@v4
      with:
        name: output_artifact_allconfigs
    - uses: actions/download-artifact@v4
      with:
        name: boot_utils_json_allconfigs
    - name: Check Build and Boot Logs
      run: scripts/check-logs.py

